<template>
	<!-- #ifdef APP -->
	<scroll-view style="flex:1">
	<!-- #endif -->
		<view class="container">
			<text class="title">CSS层叠样式优先级示例</text>
			
			<view class="section">
				<text class="section-title">1. 选择器特异性</text>
				<view id="box1" class="box box-blue">
					<text class="text">元素选择器 < 类选择器 < ID选择器</text>
				</view>
			</view>
			
			<view class="section">
				<text class="section-title">2. !important 规则</text>
				<view class="box box-red important-box">
					<text class="text">!important 会覆盖普通样式</text>
				</view>
			</view>
			
			<view class="section">
				<text class="section-title">3. 行内样式 vs 外部样式</text>
				<view class="box box-green" style="background-color: #9c27b0;">
					<text class="text">行内样式 > 外部样式</text>
				</view>
			</view>
			
			<view class="section">
				<text class="section-title">4. 后声明优先</text>
				<view class="box box-yellow box-later">
					<text class="text">后声明的样式优先级更高</text>
				</view>
			</view>
			
			<view class="section">
				<text class="section-title">5. 组合选择器</text>
				<view class="box combined-box">
					<text class="text multiple-classes">组合选择器特异性更高</text>
				</view>
			</view>
		</view>
	<!-- #ifdef APP -->
	</scroll-view>
	<!-- #endif -->
</template>

<script>
	export default {
		data() {
			return {
				
			}
		},
		methods: {
			
		}
	}
</script>

<style>
.container {
	padding: 20px;
	flex: 1;
	background-color: #f5f5f5;
}

.title {
	font-size: 20px;
	font-weight: bold;
	margin-bottom: 20px;
	text-align: center;
}

.section {
	margin-bottom: 30px;
}

.section-title {
	font-size: 16px;
	font-weight: bold;
	margin-bottom: 10px;
}

/* 基本样式 */
.box {
	width: 100%;
	height: 80px;
	border-radius: 8px;
	justify-content: center;
	align-items: center;
	padding: 10px;
}

.text {
	color: white;
	font-size: 14px;
	text-align: center;
}

/* 1. 选择器特异性演示 */
/* 元素选择器 - 低优先级 */
view {
	background-color: #ccc;
}

/* 类选择器 - 中优先级 */
.box-blue {
	background-color: #2196f3;
}

/* ID选择器 - 高优先级 */
#box1 {
	background-color: #3f51b5;
}

/* 2. !important规则演示 */
.box-red {
	background-color: #f44336;
}

.important-box {
	background-color: #ff9800 !important; /* 使用!important标记 */
}

/* 3. 行内样式vs外部样式 - 在模板中使用了行内样式 */
.box-green {
	background-color: #4caf50;
}

/* 4. 后声明优先规则 */
.box-yellow {
	background-color: #ffeb3b;
}

.box-later {
	background-color: #ff5722; /* 这个会覆盖上面的黄色 */
}

/* 5. 组合选择器 */
.combined-box {
	background-color: #607d8b;
}

.text.multiple-classes {
	color: #ffff00; /* 使用组合选择器提高特异性 */
}

/* 特异性较低的选择器，不会生效 */
.text {
	color: white;
}
</style>
