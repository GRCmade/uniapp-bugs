‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄import { defineAsyncApi as originalDefineAsyncApi, defineOffApi as originalDefineOffApi, defineOnApi as originalDefineOnApi, defineSyncApi as originalDefineSyncApi, defineTaskApi as originalDefineTaskApi } from "@dcloudio/uni-mp-sdk";
const providers = new Map();
function getUniProvider(service, providerName) {
    return providers.get(service)?.get(providerName);
}
function getUniProviders(service) {
    const result = [];
    providers.get(service)?.forEach((provider) => {
        result.push(provider);
    });
    return result;
}
function registerUniProvider(service, providerName, provider) {
    if (!providers.has(service)) {
        providers.set(service, new Map());
    }
    providers.get(service)?.set(providerName, provider);
}
const TYPE_MAP = new Map([
    [
        'string',
        String
    ],
    [
        'number',
        Number
    ],
    [
        'boolean',
        Boolean
    ],
    [
        'array',
        Array
    ],
    [
        'object',
        Object
    ]
]);
function getPropType(type) {
    if (!type) {
        return;
    }
    return TYPE_MAP.get(type);
}
function buildProtocol(protocol = null) {
    const originalProtocol = {};
    protocol?.forEach((value, key) => {
        const protocol = originalProtocol[key] = {};
        protocol.name = value.name;
        protocol.type = getPropType(value.type);
        protocol.required = value.required;
        protocol.validator = value.validator;
    });
    return originalProtocol;
}
function buildOptions(options = null) {
    const originalFormatArgs = {};
    const originalOptions = {};
    if (options) {
        if (options.formatArgs) {
            options.formatArgs.forEach((value, key) => {
                originalFormatArgs[key] = value;
            });
        }
        originalOptions.beforeInvoke = options.beforeInvoke;
        originalOptions.beforeAll = options.beforeAll;
        originalOptions.beforeSuccess = options.beforeSuccess;
        originalOptions.formatArgs = originalFormatArgs;
    }
    return originalOptions;
}
function defineAsyncApi(name, fn, protocol = null, options = null) {
    const originalProtocol = buildProtocol(protocol);
    const originalOptions = buildOptions(options);
    return originalDefineAsyncApi(name, fn, originalProtocol, originalOptions);
}
function defineTaskApi(name, fn, protocol, options) {
    const originalProtocol = buildProtocol(protocol);
    const originalOptions = buildOptions(options);
    return originalDefineTaskApi(name, fn, originalProtocol, originalOptions);
}
function defineSyncApi(name, fn, protocol = null, options = null) {
    const originalProtocol = buildProtocol(protocol);
    const originalOptions = buildOptions(options);
    return originalDefineSyncApi(name, fn, originalProtocol, originalOptions);
}
function defineOnApi(name, fn, options = null) {
    const originalOptions = buildOptions(options);
    return originalDefineOnApi(name, fn, originalOptions);
}
function defineOffApi(name, fn, options = null) {
    const originalOptions = buildOptions(options);
    return originalDefineOffApi(name, fn, originalOptions);
}
export { getUniProvider as getUniProvider, getUniProviders as getUniProviders, registerUniProvider as registerUniProvider };
export { defineAsyncApi as defineAsyncApi };
export { defineTaskApi as defineTaskApi };
export { defineSyncApi as defineSyncApi };
export { defineOnApi as defineOnApi };
export { defineOffApi as defineOffApi };
//# sourceMappingURL=uni-api-shared.js.map¬ëŸÎ/Users/gaoruicheng/Downloads/testCanvas/unpackage/debug/app-harmony-9b825588/oh_modules/.ohpm/@dcloudio+uni-app-runtime@idazlhvgikh3aw++r+ncdsd8lhisx+iuufxvzpgrtyy=/oh_modules/@dcloudio/uni-app-runtime/src/main/ets/uni-mp-sdk/Index.etsŸ˘/Users/gaoruicheng/Downloads/testCanvas/unpackage/debug/app-harmony-9b825588/oh_modules/.ohpm/@dcloudio+uni-app-runtime@idazlhvgikh3aw++r+ncdsd8lhisx+iuufxvzpgrtyy=/oh_modules/@dcloudio/uni-app-runtime/src/main/ets/uni-app-harmony/uni-api-shared.ets‘rBô±isLocalDependencyØisNodeEntryFileßpkgPathßpkgName™pkgVersion±belongProjectPath±dependencyPkgInfo¨shouldEmitJsØhostModulesInfo¬¬ŸÊ/Users/gaoruicheng/Downloads/testCanvas/unpackage/debug/app-harmony-9b825588/oh_modules/.ohpm/@dcloudio+uni-app-runtime@idazlhvgikh3aw++r+ncdsd8lhisx+iuufxvzpgrtyy=/oh_modules/@dcloudio/uni-app-runtime/src/main/ets/uni-app-harmonyπ@dcloudio/uni-app-harmony•1.0.0ŸL/Users/gaoruicheng/Downloads/testCanvas/unpackage/debug/app-harmony-9b825588‘rCíßpkgName™pkgVersionπ@dcloudio/uni-app-harmony•1.0.0√ê√⁄<import { defineAsyncApi as originalDefineAsyncApi, defineOffApi as originalDefineOffApi, defineOnApi as originalDefineOnApi, defineSyncApi as originalDefineSyncApi, defineTaskApi as originalDefineTaskApi } from "@dcloudio/uni-mp-sdk";
interface UniProvider {
    id: string;
    description: string;
}
const providers: Map<String, Map<String, UniProvider>> = new Map();
function getUniProvider<T extends UniProvider>(service: string, providerName: String): T | null {
    return providers.get(service)?.get(providerName) as T | null;
}
function getUniProviders(service: string): UniProvider[] {
    const result: UniProvider[] = [];
    providers.get(service)?.forEach((provider)=>{
        result.push(provider);
    });
    return result;
}
function registerUniProvider<T extends UniProvider>(service: string, providerName: string, provider: T) {
    if (!providers.has(service)) {
        providers.set(service, new Map());
    }
    providers.get(service)?.set(providerName, provider);
}
type Anything = Object | null | undefined;
type NullType = null | undefined;
type FormatArgsValueType = Function | string | number | boolean;
interface AsyncApiSuccessResult {
}
interface AsyncApiResult {
}
interface ApiError {
    errMsg?: string | null;
    errCode?: number | null;
}
interface ApiExecutor<K> {
    resolve: (res?: K | void) => void;
    reject: (errMsg?: string, errRes?: ApiError) => void;
}
interface ProtocolOptions {
    name?: string | null;
    type?: string | null;
    required?: boolean | null;
    validator?: (value: Object) => boolean | undefined | string;
}
interface ApiOptions<T> {
    beforeInvoke?: (args: Object) => boolean | void | string;
    beforeAll?: (res: Object) => void;
    beforeSuccess?: (res: Object, args: T) => void;
    formatArgs?: Map<string, FormatArgsValueType>;
}
interface AsyncMethodOptionLike {
    success?: Function | null;
}
const TYPE_MAP = new Map<string, Object>([
    [
        'string',
        String
    ],
    [
        'number',
        Number
    ],
    [
        'boolean',
        Boolean
    ],
    [
        'array',
        Array
    ],
    [
        'object',
        Object
    ]
]);
function getPropType(type: string | NullType): Anything {
    if (!type) {
        return;
    }
    return TYPE_MAP.get(type);
}
function buildProtocol(protocol: Map<string, ProtocolOptions> | null = null) {
    const originalProtocol = {} as Record<string, Object>;
    protocol?.forEach((value, key)=>{
        const protocol = originalProtocol[key] = {} as Record<string, Anything>;
        protocol.name = value.name;
        protocol.type = getPropType(value.type);
        protocol.required = value.required;
        protocol.validator = value.validator;
    });
    return originalProtocol;
}
function buildOptions(options: ApiOptions<AsyncMethodOptionLike> | null = null) {
    const originalFormatArgs = {} as Record<string, FormatArgsValueType>;
    const originalOptions = {} as Record<string, Anything>;
    if (options) {
        if (options.formatArgs) {
            options.formatArgs.forEach((value, key)=>{
                originalFormatArgs[key] = value;
            });
        }
        originalOptions.beforeInvoke = options.beforeInvoke;
        originalOptions.beforeAll = options.beforeAll;
        originalOptions.beforeSuccess = options.beforeSuccess;
        originalOptions.formatArgs = originalFormatArgs;
    }
    return originalOptions;
}
function defineAsyncApi<T extends AsyncMethodOptionLike, K>(name: string, fn: (options: T, res: ApiExecutor<K>) => void, protocol: Map<string, ProtocolOptions> | null = null, options: ApiOptions<T> | null = null): Function {
    const originalProtocol = buildProtocol(protocol);
    const originalOptions = buildOptions(options as ApiOptions<AsyncMethodOptionLike>);
    return originalDefineAsyncApi(name, fn, originalProtocol, originalOptions);
}
function defineTaskApi<T, K, TASK>(name: string, fn: (options: T, res: ApiExecutor<K>) => TASK, protocol: Map<string, ProtocolOptions>, options: ApiOptions<T>): Object {
    const originalProtocol = buildProtocol(protocol);
    const originalOptions = buildOptions(options as ApiOptions<AsyncMethodOptionLike>);
    return originalDefineTaskApi(name, fn, originalProtocol, originalOptions);
}
function defineSyncApi<K>(name: string, fn: Function, protocol: Map<string, ProtocolOptions> | null = null, options: ApiOptions<Object> | null = null): (...args: Object[]) => K {
    const originalProtocol = buildProtocol(protocol);
    const originalOptions = buildOptions(options as ApiOptions<AsyncMethodOptionLike>);
    return originalDefineSyncApi(name, fn, originalProtocol, originalOptions);
}
function defineOnApi<T>(name: string, fn: () => void, options: ApiOptions<T> | null = null): Function {
    const originalOptions = buildOptions(options as ApiOptions<AsyncMethodOptionLike>);
    return originalDefineOnApi(name, fn, originalOptions);
}
function defineOffApi<T>(name: string, fn: () => void, options: ApiOptions<T> | null = null): Function {
    const originalOptions = buildOptions(options as ApiOptions<AsyncMethodOptionLike>);
    return originalDefineOffApi(name, fn, originalOptions);
}
export { UniProvider as UniProvider, getUniProvider as getUniProvider, getUniProviders as getUniProviders, registerUniProvider as registerUniProvider };
export { AsyncApiSuccessResult as AsyncApiSuccessResult };
export { AsyncApiResult as AsyncApiResult };
export { ApiError as ApiError };
export { ApiExecutor as ApiExecutor };
export { ProtocolOptions as ProtocolOptions };
export { ApiOptions as ApiOptions };
export { defineAsyncApi as defineAsyncApi };
export { defineTaskApi as defineTaskApi };
export { defineSyncApi as defineSyncApi };
export { defineOnApi as defineOnApi };
export { defineOffApi as defineOffApi };
¿‘rDë¥@dcloudio/uni-mp-sdk‘rEó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA¬ŸÎ/Users/gaoruicheng/Downloads/testCanvas/unpackage/debug/app-harmony-9b825588/oh_modules/.ohpm/@dcloudio+uni-app-runtime@idazlhvgikh3aw++r+ncdsd8lhisx+iuufxvzpgrtyy=/oh_modules/@dcloudio/uni-app-runtime/src/main/ets/uni-mp-sdk/Index.etsA√™oh-resolve¬ì‘rFñßversion§file™sourceRootßsources•names®mappings±uni-api-shared.js†ë≤uni-api-shared.etsê‹ f‹ î    î  î	  	î  î  î1  1î3  3î?  ?îÃC  ÃCîÃW  ÃWîÃY  ÃYîÃd  ÃdîÃh  ÃhîÃ{  Ã{îÃ}  Ã}îÃä  ÃäîÃé  ÃéîÃ£  Ã£îÃ•  Ã•îÃ≤  Ã≤îÃ∂  Ã∂îÃÀ  ÃÀîÃÕ  ÃÕîÃ”  Ã”îÃÈ  ÃÈîÃÍ  ÃÍòî   î î î 9î =î Ã@î ÃBî ÃCóî   î	 	î î /î >î! Ã@î- ÃTûî î î î î î î   î! !î# #î& &î' 'î3 3î4 Ã@î5 ÃAíî   î ïî  	 î	 		î 	î 	î  	(ñî 
î
 

î 
î 
"î 
$î 
%ûî î î î î î î î î# #î$ $î% %î- -î/ .î1 0òî î î î î î î î îî î î î îî î î î íî   î ôî   î	 	î î 4î$ ÃCî& ÃEî2 ÃYî4 Ã[î< Ãföî î î	 	î î î î î î î! !úî î î î î î î î# #î& &î( (î) )î* *ëî üî î î î î î î î î î   î, ,î. .î6 6î7 7î8 8íî   î óî  4 î 4î 4î 4î 4î 4î 4)ëî 5íî 6î 6íî 7î 7ëî 8ëî 9íî :î :íî ;î ;ëî <ëî =íî >î >íî ?î ?ëî Ã@ëî ÃAíî ÃBî ÃBíî ÃCî ÃCëî ÃDëî ÃEíî ÃFî ÃFíî ÃGî ÃGëî ÃHìî ÃIî ÃIî ÃIïî  ÃJ î	 ÃJ	î ÃJî ÃJî ÃJ,ïî ÃKî ÃKî	 ÃK	î ÃKî ÃKíî ÃLî ÃLëî ÃMôî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNî ÃNíî  ÃO î ÃOñî  ÃP î	 ÃP	î ÃPî ÃPî" ÃPÃGî& ÃPÃKñî ÃQî
 ÃQ
î ÃQî ÃQî ÃQ9î  ÃQ:õî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî ÃRî! ÃR!î# ÃR"î% ÃR$õî ÃSî ÃSî ÃSî ÃSî) ÃS)î* ÃS*î- ÃS-î. ÃS.î1 ÃS1î3 ÃSÃOî4 ÃSÃPôî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî ÃTî" ÃT"î# ÃT#úî ÃUî ÃUî ÃUî ÃUî ÃUî# ÃU#î$ ÃU$î) ÃU)î* ÃU*î. ÃU.î/ ÃU/î0 ÃU0ôî ÃVî ÃVî ÃVî ÃVî ÃVî! ÃV!î" ÃV"î* ÃV*î+ ÃV+ôî ÃWî ÃWî ÃWî ÃWî ÃWî" ÃW"î# ÃW#î, ÃW,î- ÃW-îî ÃXî ÃXî ÃXî ÃXîî ÃYî ÃYî ÃYî ÃYíî  ÃZ î ÃZñî  Ã[ î	 Ã[	î Ã[î Ã[î  Ã[ÃJî$ Ã[ÃNñî Ã\î
 Ã\
î Ã\î Ã\î! Ã\ÃHî" Ã\ÃIñî Ã]î
 Ã]
î Ã]î Ã]î Ã]:î Ã];îî Ã^î Ã^î Ã^î Ã^ñî Ã_î Ã_î Ã_î Ã_î Ã_î  Ã_ ùî Ã`î Ã`î Ã`î Ã`î Ã`î& Ã`&î' Ã`'î( Ã`(î- Ã`-î/ Ã`/î2 Ã`2î4 Ã`3î6 Ã`5òî Ãaî" Ãa"î# Ãa#î& Ãa&î' Ãa'î* Ãa*î/ Ãa/î0 Ãa0îî Ãbî Ãbî Ãbî Ãbëî	 Ãc	ôî Ãdî Ãdî Ãdî$ Ãd$î' Ãd'î. Ãd.î/ Ãd/î; Ãd;î< Ãd<ôî Ãeî Ãeî Ãeî! Ãe!î$ Ãe$î+ Ãe+î, Ãe,î5 Ãe5î6 Ãe6ôî Ãfî Ãfî Ãfî% Ãf%î( Ãf(î/ Ãf/î0 Ãf0î= Ãf=î> Ãf>óî Ãgî Ãgî Ãgî" Ãg"î% Ãg%î7 Ãg7î8 Ãg8ëî Ãhîî Ãiî Ãiî Ãiî Ãiíî  Ãj î Ãjùî  Ãk î	 Ãk	î Ãkî Ãk<î ÃkÃHî ÃkÃJî  ÃkÃwî" ÃkÃyî- ÃkÃ©î1 ÃkÃ≠î3 ÃkÃØî= ÃkÃœîÃA ÃkÃ”ôî Ãlî
 Ãl
î Ãlî Ãlî* Ãl*î+ Ãl+î3 Ãl3î4 Ãl4î5 Ãl5ôî Ãmî
 Ãm
î Ãmî Ãmî( Ãm(î) Ãm)î0 ÃmÃUî1 ÃmÃVî2 ÃmÃWùî Ãnî Ãnî! Ãn!î" Ãn"î& Ãn&î( Ãn(î* Ãn*î, Ãn,î< Ãn<î> Ãn>îÃM ÃnÃMîÃN ÃnÃNîÃO ÃnÃOíî  Ão î Ãoõî  Ãp î	 Ãp	î Ãpî Ãp#î Ãp/î Ãp1î ÃpÃ^î! ÃpÃ`î) ÃpÃÜî+ ÃpÃàî2 ÃpÃûôî Ãqî
 Ãq
î Ãqî Ãqî* Ãq*î+ Ãq+î3 Ãq3î4 Ãq4î5 Ãq5ôî Ãrî
 Ãr
î Ãrî Ãrî( Ãr(î) Ãr)î0 ÃrÃUî1 ÃrÃVî2 ÃrÃWùî Ãsî Ãsî  Ãs î! Ãs!î% Ãs%î' Ãs'î) Ãs)î+ Ãs+î; Ãs;î= Ãs=îÃL ÃsÃLîÃM ÃsÃMîÃN ÃsÃNíî  Ãt î Ãtùî  Ãu î	 Ãu	î Ãuî Ãuî Ãu&î Ãu(î Ãu4î! Ãu6î, ÃuÃfî0 ÃuÃjî2 ÃuÃlî< ÃuÃëîÃ@ ÃuÃïôî Ãvî
 Ãv
î Ãvî Ãvî* Ãv*î+ Ãv+î3 Ãv3î4 Ãv4î5 Ãv5ôî Ãwî
 Ãw
î Ãwî Ãwî( Ãw(î) Ãw)î0 ÃwÃUî1 ÃwÃVî2 ÃwÃWùî Ãxî Ãxî  Ãx î! Ãx!î% Ãx%î' Ãx'î) Ãx)î+ Ãx+î; Ãx;î= Ãx=îÃL ÃxÃLîÃM ÃxÃMîÃN ÃxÃNíî  Ãy î Ãyöî  Ãz î	 Ãz	î Ãzî Ãzî Ãz$î Ãz&î Ãz4î Ãz6î) ÃzÃVî- ÃzÃZôî Ã{î
 Ã{
î Ã{î Ã{î( Ã{(î) Ã{)î0 Ã{ÃUî1 Ã{ÃVî2 Ã{ÃWõî Ã|î Ã|î Ã|î Ã|î# Ã|#î% Ã|%î' Ã|'î) Ã|)î8 Ã|8î9 Ã|9î: Ã|:íî  Ã} î Ã}öî  Ã~ î	 Ã~	î Ã~î Ã~î Ã~%î Ã~'î Ã~5î  Ã~7î* Ã~ÃWî. Ã~Ã[ôî Ãî
 Ã
î Ãî Ãî( Ã(î) Ã)î0 ÃÃUî1 ÃÃVî2 ÃÃWõî ÃÄî ÃÄî ÃÄî  ÃÄ î$ ÃÄ$î& ÃÄ&î( ÃÄ(î* ÃÄ*î9 ÃÄ9î: ÃÄ:î; ÃÄ;íî  ÃÅ î ÃÅ‹ î  ÃÇ î ÃÇî	 ÃÇ%î ÃÇ3î ÃÇ7î) ÃÇÃEî+ ÃÇÃGî: ÃÇÃVî> ÃÇÃZîÃM ÃÇÃiîÃO ÃÇÃkîÃb ÃÇÃ~îÃf ÃÇÃÇîÃy ÃÇÃïîÃ{ ÃÇÃóîÃ| ÃÇÃòòî  Ãâ î Ãâî	 Ãâ	î Ãâî Ãâî) Ãâ)î+ Ãâ+î, Ãâ,òî  Ãä î Ãäî	 Ãä	î Ãäî Ãäî' Ãä'î) Ãä)î* Ãä*òî  Ãã î Ããî	 Ãã	î Ããî Ããî' Ãã'î) Ãã)î* Ãã*òî  Ãå î Ãåî	 Ãå	î Ãåî Ãåî# Ãå#î% Ãå%î& Ãå&òî  Ãç î Ãçî	 Ãç	î Ãçî Ãçî% Ãç%î' Ãç'î( Ãç(‘rGñßversion§fileßsourcesÆsourcesContent•names®mappings¿ë¿ë¿ê‹ gëî    ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî  	 ëî  
 ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî    ëî  ! ëî  " ëî  # ëî  $ ëî  % ëî  & ëî  ' ëî  ( ëî  ) ëî  * ëî  + ëî  , ëî  - ëî  . ëî  / ëî  0 ëî  1 ëî  2 ëî  3 ëî  4 ëî  5 ëî  6 ëî  7 ëî  8 ëî  9 ëî  : ëî  ; ëî  < ëî  = ëî  > ëî  ? ëî  Ã@ ëî  ÃA ëî  ÃB ëî  ÃC ëî  ÃD ëî  ÃE ëî  ÃF ëî  ÃG ëî  ÃH ëî  ÃI ëî  ÃJ ëî  ÃK ëî  ÃL ëî  ÃM ëî  ÃN ëî  ÃO ëî  ÃP ëî  ÃQ ëî  ÃR ëî  ÃS ëî  ÃT ëî  ÃU ëî  ÃV ëî  ÃW ëî  ÃX ëî  ÃY ëî  ÃZ ëî  Ã[ ëî  Ã\ ëî  Ã] ëî  Ã^ ëî  Ã_ ëî  Ã` ëî  Ãa ëî  Ãb ëî  Ãc ëî  Ãd ëî  Ãe ëî  Ãf ‘rHíßmissing¶plugin√¶genAbc¬ê‘  ‘rIî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêñ‘rJñ§type•start£end´declaration™specifiers¶source∂ExportNamedDeclarationÕòÕ¿ì‘rKï§type•start£end•local®exportedØExportSpecifierÕ°Õ¡‘rLî§type•start£end§name™IdentifierÕ°ÕØÆgetUniProviderL™IdentifierÕ≥Õ¡ÆgetUniProviderKØExportSpecifierÕ√ÕÂL™IdentifierÕ√Õ“ØgetUniProvidersL™IdentifierÕ÷ÕÂØgetUniProvidersKØExportSpecifierÕÁÕL™IdentifierÕÁÕ˙≥registerUniProviderL™IdentifierÕ˛Õ≥registerUniProvider¿J∂ExportNamedDeclarationÕÕB¿ëKØExportSpecifierÕÕ?L™IdentifierÕÕ-ÆdefineAsyncApiL™IdentifierÕ1Õ?ÆdefineAsyncApi¿J∂ExportNamedDeclarationÕDÕn¿ëKØExportSpecifierÕMÕkL™IdentifierÕMÕZ≠defineTaskApiL™IdentifierÕ^Õk≠defineTaskApi¿J∂ExportNamedDeclarationÕpÕö¿ëKØExportSpecifierÕyÕóL™IdentifierÕyÕÜ≠defineSyncApiL™IdentifierÕäÕó≠defineSyncApi¿J∂ExportNamedDeclarationÕúÕ¬¿ëKØExportSpecifierÕ•ÕøL™IdentifierÕ•Õ∞´defineOnApiL™IdentifierÕ¥Õø´defineOnApi¿J∂ExportNamedDeclarationÕƒÕÏ¿ëKØExportSpecifierÕÕÕÈL™IdentifierÕÕÕŸ¨defineOffApiL™IdentifierÕ›ÕÈ¨defineOffApi¿ë‘rMï§type•start£end™specifiers¶source±ImportDeclaration ÃÍï‘rNï§type•start£end®imported•localØImportSpecifier	1L™Identifier	ÆdefineAsyncApiL™Identifier1∂originalDefineAsyncApiNØImportSpecifier3ÃWL™Identifier3?¨defineOffApiL™IdentifierÃCÃW¥originalDefineOffApiNØImportSpecifierÃYÃ{L™IdentifierÃYÃd´defineOnApiL™IdentifierÃhÃ{≥originalDefineOnApiNØImportSpecifierÃ}Ã£L™IdentifierÃ}Ãä≠defineSyncApiL™IdentifierÃéÃ£µoriginalDefineSyncApiNØImportSpecifierÃ•ÃÀL™IdentifierÃ•Ã≤≠defineTaskApiL™IdentifierÃ∂ÃÀµoriginalDefineTaskApi‘rOï§type•start£end•value£rawßLiteralÃ”ÃÈ¥@dcloudio/uni-mp-sdk∂"@dcloudio/uni-mp-sdk"