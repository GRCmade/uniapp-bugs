{"version":3,"sources":["pages/API/get-file-system-manager/get-file-system-manager.uvue","pages/API/get-file-system-manager/get-file-system-manager.uvue?type=page"],"sourcesContent":["<template>\n\n  <text>显示简易操作日志,详细日志需真机运行查看</text><button size=\"mini\" @click=\"log=''\">清空日志</button>\n  <text style=\"margin: 2px; padding: 2px; border: 1px solid #000000;\">{{ log }}</text>\n  <scroll-view style=\"flex: 1;\">\n\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"statFileInfoTest\"\n      id=\"btn-stat-file\">递归获取目录files的Stats对象{{statFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"mkdirTest\" id=\"btn-mkdir\">创建文件夹{{mkdirFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"writeFileTest\" id=\"btn-write-file\">覆盖写入文件{{writeFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"readDirTest\" id=\"btn-read-dir\">读取文件夹{{readDir}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"readFileTest\" id=\"btn-read-file\">读取文件{{readFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"copyFileTest\"\n      id=\"btn-copy-file\">复制文件{{copyFromFile}}到{{copyToFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"renameFileTest\"\n      id=\"btn-rename-file\">重命名文件{{renameFromFile}}到{{renameToFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"accessFileTest\" id=\"btn-access-file\">判断文件{{accessFile}}是否存在</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"getFileInfoTest\"\n      id=\"btn-get-file-info\">获取文件信息{{getFileInfoFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"unlinkTest\" id=\"btn-unlink-file\">删除文件{{unlinkFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"copyStaticToFilesTest\"\n      id=\"btn-copyStatic-file\">从static目录复制文件到a目录</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"unlinkAllFileTest\"\n      id=\"btn-clear-file\">删除文件夹{{rmDirFile}}下的所有文件</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"rmdirTest\" id=\"btn-remove-dir\">删除文件夹{{rmDirFile}}</button>\n\n\n\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"statFileInfoSyncTest\"\n      id=\"btn-stat-file-sync\">同步递归获取目录files的Stats对象{{statFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"appendFileTest\" id=\"btn-append-file\">在文件{{readFile}}结尾追加内容</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"appendFileSyncTest\"\n      id=\"btn-append-file-sync\">同步在文件{{readFile}}结尾追加内容</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"writeFileSyncTest\"\n      id=\"btn-write-file-sync\">同步覆盖写入文件{{writeFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"readFileSyncTest\" id=\"btn-read-file-sync\">同步读取文件{{readFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"unlinkSyncTest\"\n      id=\"btn-unlink-file-sync\">同步删除文件{{unlinkFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"mkdirSyncTest\" id=\"btn-mkdir-sync\">同步创建文件夹{{mkdirFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"rmdirSyncTest\" id=\"btn-remove-dir-sync\">同步删除文件夹{{rmDirFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"readDirSyncTest\" id=\"btn-read-dir-sync\">同步读取文件夹{{readDir}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"accessFileSyncTest\"\n      id=\"btn-access-file-sync\">同步判断文件{{accessFile}}是否存在</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"renameFileSync\"\n      id=\"btn-rename-file-sync\">同步重命名文件{{renameFromFile}}到{{renameToFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"copyFileSyncTest\"\n      id=\"btn-copy-file-sync\">同步复制文件{{copyFromFile}}到{{copyToFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"saveFileTest\" id=\"btn-save-file\">保存临时文件到本地</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"saveFileSyncTest\" id=\"btn-save-file-sync\">同步保存临时文件到本地</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"removeSavedFileTest\" id=\"btn-remove-saved-file\">删除已保存的本地文件</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"unzipFileTest\" id=\"btn-unzip-file-sync\">解压文件</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"getSavedFileListTest\"\n      id=\"btn-getsaved-filelist\">获取该已保存的本地缓存文件列表</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"truncateFileTest\"\n      id=\"btn-truncate-file\">对文件{{writeFile}}内容进行截断操作</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"truncateFileSyncTest\"\n      id=\"btn-truncate-file-sync\">同步对文件{{writeFile}}内容进行截断操作</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"readCompressedFileTest\"\n      id=\"btn-compressed-file\">读取指定压缩类型的本地文件内容</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"readCompressedFileSyncTest\"\n      id=\"btn-compressed-file-sync\">同步读取指定压缩类型的本地文件内容</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"openFileTest\" id=\"btn-open-file\">打开文件{{readFile}}，返回描述符</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"openFileSyncTest('r')\"\n      id=\"btn-open-file-sync\">同步打开文件{{readFile}}，返回描述符</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"closeTest\" id=\"btn-close-file\">通过文件描述符关闭文件{{readFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"closeSyncTest\"\n      id=\"btn-close-file-sync\">通过文件描述符同步关闭文件{{readFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"writeTest\" id=\"btn-write\">通过文件描述符写入文件{{readFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"writeSyncTest\" id=\"btn-write-sync\">同步通过文件描述符写入文件{{readFile}}</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"fstatTest\" id=\"btn-fstat-file\">通过文件描述符获取{{statFile}}的状态信息</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"fstatSyncTest\"\n      id=\"btn-fstat-file-sync\">同步通过文件描述符获取{{statFile}}的状态信息</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"ftruncateFileTest\"\n      id=\"btn-ftruncate-file\">通过文件描述符对文件{{writeFile}}内容进行截断</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"ftruncateFileSyncTest\"\n      id=\"btn-ftruncate-file-sync\">同步通过文件描述符对文件{{writeFile}}内容进行截断</button>\n    <button class=\"btnstyle\" type=\"primary\" @tap=\"readZipEntry\" id=\"btn-readzip-entry\">读取压缩包内的文件</button>\n    <view style=\"height: 4px;\"></view>\n\n\n  </scroll-view>\n\n</template>\n\n<script>\n  export default {\n\n    data() {\n      return {\n        log: \"\",\n        /**\n         * 自动化测试需要关闭log\n         */\n        logAble: true,\n        fileListSuccess: [] as string[],\n        fileListComplete: [] as string[],\n        accessFileRet: '',\n        lastFailError: new UniError(\"uni-file-manager\", 1300000, \"mock error\"),\n        lastCompleteError: new UniError(\"uni-file-manager\", 1300000, \"mock error\"),\n        readDir: 'a',\n        readFileRet: \"\",\n        writeFileContent: \"中文 en.\\r\\n\\t换行\",\n        appendFileContent: \"append content\",\n        getFileInfoAlgorithm: \"md5\",\n        getFileInfoSize: -1,\n        getFileInfoDigest: \"\",\n        unlinkFile: 'a/1.txt',\n        accessFile: 'a/1.txt',\n        writeFile: 'a/1.txt',\n        writeData: 'insert data哈哈哈',\n        brFile: 'a/1.txt.br',\n        temFile: 'a/1.txt',\n        copyFromFile: 'a/1.txt',\n        copyToFile: 'a/2.txt',\n        renameFromFile: 'a/2.txt',\n        renameToFile: 'a/3.txt',\n        getFileInfoFile: 'a/1.txt',\n        statFile: '',\n        rmDirFile: 'a',\n        mkdirFile: 'a',\n        readFile: 'a/1.txt',\n        recursiveVal: true,\n        done: false,\n        writeFileEncoding: \"utf-8\",\n        readFileEncoding: \"utf-8\",\n        statsRet: [] as Array<FileStats>,\n        unzipFile: 'zip/1.zip',\n        targetZip: \"unzip\",\n        renameFileRet: '',\n        saveFileRet: '',\n        removeSavedFileRet: '',\n        fd: '',\n        closeFileRet: '',\n        bytesWritten: 0,\n        fstat: null as Stats | null,\n        ftruncateRet: '',\n        readZipFile: 'to.zip',\n        getSavedFileListRet: '',\n        /**\n         * 待测试的全局环境变量\n         */\n        basePath: uni.env.USER_DATA_PATH,\n        copyToBasePath: uni.env.USER_DATA_PATH,\n        globalTempPath: uni.env.CACHE_PATH,\n        globalRootPath: uni.env.SANDBOX_PATH,\n        globalUserDataPath: uni.env.USER_DATA_PATH\n      }\n    },\n    onLoad() {\n    },\n\n    methods: {\n      statFileInfoTest: function (_ : any) {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.stat({\n          // path: `${this.basePath}${this.statFile}`, //USER_DATA_PATH\n          path: `${this.globalTempPath}${this.statFile}`, //CACHE_PATH\n          recursive: this.recursiveVal,\n          success: (res : StatSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'statFileInfoTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('statFileInfoTest success', res)\n            this.statsRet = res.stats\n            console.log('this.statsRet', this.statsRet)\n          },\n          fail: (res:IUniError ) => {\n            if (this.logAble) {\n              this.log += 'statFileInfoTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('statFileInfoTest fail', res)\n            this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n          },\n          complete: (res : any) => {\n            console.log(\"statFileInfoTest complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as StatOptions)\n      },\n\n      getFileInfoTest: function () {\n        const fileManager = uni.getFileSystemManager()\n\n        fileManager.getFileInfo({\n          filePath: `${this.basePath}${this.getFileInfoFile}`,\n          digestAlgorithm: this.getFileInfoAlgorithm,\n          success: (res : GetFileInfoSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'getFileInfoTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n            this.getFileInfoSize = res.size\n            this.getFileInfoDigest = res.digest\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'getFileInfoTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n            this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as GetFileInfoOptions)\n      },\n\n      copyFileTest: function () {\n        const fileManager = uni.getFileSystemManager()\n\n        fileManager.copyFile({\n          srcPath: `${this.basePath}${this.copyFromFile}`,\n          destPath: `${this.copyToBasePath}${this.copyToFile}`,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'copyFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'copyFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n            this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as CopyFileOptions)\n      },\n\n      renameFileTest: function () {\n        const fileManager = uni.getFileSystemManager()\n\n        fileManager.rename({\n          oldPath: `${this.basePath}${this.renameFromFile}`,\n          newPath: `${this.basePath}${this.renameToFile}`,\n          success: (res) => {\n            if (this.logAble) {\n              this.log += 'renameFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'renameFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n            this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n          },\n          complete: (res : any) => {\n            this.done = true\n            console.log(\"complete\", res)\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as RenameOptions)\n      },\n\n      readDirTest: function () {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.readdir({\n          dirPath: `${this.basePath}${this.readDir}`,\n          success: (res : ReadDirSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'readDirTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log(\"success\", res)\n            this.fileListSuccess = res.files\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'readDirTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n            this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            } else {\n              this.fileListComplete = (res as ReadDirSuccessResult).files\n            }\n          }\n        } as ReadDirOptions)\n      },\n\n      writeFileTest: function (_ : any) {\n        const fileManager = uni.getFileSystemManager()\n\n        fileManager.writeFile({\n          filePath: `${this.basePath}${this.writeFile}`,\n          data: this.writeFileContent,\n          encoding: this.writeFileEncoding,\n          success: (res) => {\n            if (this.logAble) {\n              this.log += 'writeFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'writeFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail')\n            this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n          },\n          complete: (res : any) => {\n            this.done = true\n            console.log(\"complete\")\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n\n          }\n        } as WriteFileOptions)\n      },\n\n      readFileTest: function () {\n        const fileManager = uni.getFileSystemManager()\n\n        fileManager.readFile({\n          filePath: `${this.basePath}${this.readFile}`,\n          encoding: this.readFileEncoding,\n          success: (res : ReadFileSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'readFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n            this.readFileRet = res.data\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'readFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n            this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as ReadFileOptions)\n      },\n\n      rmdirTest: function () {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.rmdir({\n          dirPath: `${this.basePath}${this.rmDirFile}`,\n          recursive: this.recursiveVal,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'rmdirTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'rmdirTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n            this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as RmDirOptions)\n      },\n\n      mkdirTest: function () {\n        // 准备测试数据\n        const fileManager = uni.getFileSystemManager()\n\n        fileManager.mkdir({\n          dirPath: `${this.basePath}${this.mkdirFile}`,\n          recursive: this.recursiveVal,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'mkdirTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'mkdirTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (res : any) => {\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n            this.done = true\n            console.log(\"complete\", res)\n          }\n        } as MkDirOptions)\n\n      },\n      accessFileTest: function () {\n        this.accessFileRet = ''\n        const fileManager = uni.getFileSystemManager()\n        fileManager.access({\n          path: `${this.basePath}${this.accessFile}`,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'accessFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n            this.accessFileRet = res.errMsg\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'accessFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (res : any) => {\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n            console.log(\"complete\", res)\n            this.done = true\n          }\n        } as AccessOptions)\n\n      },\n      unlinkTest: function () {\n        const fileManager = uni.getFileSystemManager()\n\n        fileManager.unlink({\n          filePath: `${this.basePath}${this.unlinkFile}`,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'unlinkTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'unlinkTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (res : any) => {\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n            console.log(\"complete\", res)\n            this.done = true\n          }\n        } as UnLinkOptions)\n      },\n      unlinkAllFileTest: function () {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.readdir({\n          dirPath: `${this.basePath}${this.rmDirFile}`,\n          success: (res : ReadDirSuccessResult) => {\n            console.log(\"success to readdir\", res)\n            res.files.forEach(element => {\n              console.log(element)\n              let filePath : string\n              if (this.rmDirFile.length <= 0) {\n                filePath = `${this.basePath}${element}`\n              } else {\n                filePath = `${this.basePath}${this.rmDirFile}/${element}`\n              }\n              fileManager.unlink({\n                filePath: filePath,\n                success: (res : FileManagerSuccessResult) => {\n                  if (this.logAble) {\n                    this.log += 'unlinkAllFileTest success:' + JSON.stringify(res) + '\\n\\n'\n                  }\n                  console.log('success unlink', res)\n                },\n                fail: (res : IUniError) => {\n                  if (this.logAble) {\n                    this.log += 'unlinkAllFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n                  }\n                  console.log('fail unlink', res)\n                              this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n                },\n                complete: (res : any) => {\n                  if (res instanceof UniError) {\n                    this.lastCompleteError = res\n                  }\n                  console.log(\"complete unlink\", res)\n                  this.done = true\n                }\n              } as UnLinkOptions)\n            });\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'unlinkAllFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail to readdir', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (res : any) => {\n            console.log(\"complete readdir\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            } else {\n              this.fileListComplete = (res as ReadDirSuccessResult).files\n            }\n          }\n        } as ReadDirOptions)\n      },\n      copyStaticToFilesTest: function () {\n        const fileManager = uni.getFileSystemManager()\n\n        fileManager.copyFile({\n          srcPath: \"/static/list-mock/mock.json\",\n          destPath: `${this.copyToBasePath}/a/mock.json`,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'copyFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'copyFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as CopyFileOptions)\n      },\n      //start\n      appendFileTest: function (_ : any) {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.appendFile({\n          filePath: `${this.basePath}${this.writeFile}`,\n          data: this.appendFileContent,\n          encoding: this.writeFileEncoding,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'appendFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'appendFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail')\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (res : any) => {\n            this.done = true\n            console.log(\"complete\")\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n\n          }\n        } as AppendFileOptions)\n      },\n      writeFileSyncTest: function (_ : any) {\n        try {\n          const fileManager = uni.getFileSystemManager()\n          fileManager.writeFileSync(`${this.basePath}${this.writeFile}`, this.writeFileContent, this.writeFileEncoding)\n          if (this.logAble) {\n            this.log += 'writeFileSyncTest success:' + '\\n\\n'\n          }\n          this.done = true\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'writeFileSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n\n      },\n      readFileSyncTest: function () {\n        try {\n          const fileManager = uni.getFileSystemManager()\n          let data = fileManager.readFileSync(\n            `${this.basePath}${this.readFile}`,\n            this.readFileEncoding)\n          if (this.logAble) {\n            this.log += 'readFileSyncTest result:' + data + '\\n\\n'\n          }\n          this.done = true\n          this.readFileRet = data\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'readFileSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n\n      },\n      unlinkSyncTest: function () {\n        try {\n          const fileManager = uni.getFileSystemManager()\n          fileManager.unlinkSync(\n            `${this.basePath}${this.unlinkFile}`)\n          this.done = true\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'unlinkSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n      },\n      mkdirSyncTest: function () {\n        // 准备测试数据\n        try {\n          const fileManager = uni.getFileSystemManager()\n          fileManager.mkdirSync(`${this.basePath}${this.mkdirFile}`, this.recursiveVal)\n          this.done = true\n        } catch (e) {\n          this.done = true\n          if (this.logAble) {\n            this.log += 'mkdirSyncTest fail:' + e + '\\n\\n'\n          }\n        }\n\n      },\n      rmdirSyncTest: function () {\n        try {\n          const fileManager = uni.getFileSystemManager()\n          fileManager.rmdirSync(\n            `${this.basePath}${this.rmDirFile}`,\n            this.recursiveVal)\n          this.done = true\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'rmdirSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n      },\n      readDirSyncTest: function () {\n        try {\n          const fileManager = uni.getFileSystemManager()\n          let res = fileManager.readdirSync(\n            `${this.basePath}${this.readDir}`)\n          if (this.logAble) {\n            this.log += 'readDirTest success:' + JSON.stringify(res) + '\\n\\n'\n          }\n          if (res != null) {\n            this.fileListSuccess = res\n          }\n          this.done = true\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'rmdirSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n      },\n      accessFileSyncTest: function () {\n        this.accessFileRet = ''\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.accessSync(`${this.basePath}${this.accessFile}`)\n          this.done = true\n          this.accessFileRet = 'access:ok'\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'rmdirSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n      },\n      renameFileSync: function () {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.renameSync(`${this.basePath}${this.renameFromFile}`,\n            `${this.basePath}${this.renameToFile}`)\n          this.done = true\n          this.renameFileRet = \"rename:ok\"\n\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'rmdirSyncTest fail:' + e + '\\n\\n'\n          }\n          console.log('renameSync:' + e)\n          this.done = true\n        }\n      },\n      copyFileSyncTest: function () {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.copyFileSync(\n            `${this.basePath}${this.copyFromFile}`,\n            `${this.copyToBasePath}${this.copyToFile}`)\n          this.done = true\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'rmdirSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n      },\n      appendFileSyncTest: function (_ : any) {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.appendFileSync(\n            `${this.basePath}${this.writeFile}`,\n            this.appendFileContent,\n            this.writeFileEncoding)\n          this.done = true\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'rmdirSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n      },\n      saveFileTest: function (_ : any) {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.saveFile({\n          tempFilePath: `${this.globalTempPath}${this.temFile}`,\n          // filePath:`${this.basePath}local/`,\n          success: (res : SaveFileSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'saveFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n            this.saveFileRet = res.savedFilePath\n            this.done = true\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'saveFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('saveFileTest fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n            this.done = true\n          },\n          complete: (_) => {\n            this.done = true\n          }\n        } as SaveFileOptions)\n      },\n      saveFileSyncTest: function (_ : any) {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.saveFileSync(\n            `${this.globalTempPath}${this.temFile}`, `${this.basePath}/`)\n          // filePath:`${this.basePath}local/`,)\n          this.done = true\n\n          //todo 后面打开\n          // this.saveFileRet=res\n        } catch (e) {\n          console.log('saveFileSyncTest:' + e)\n          this.done = true\n        }\n      },\n      unzipFileTest: function (_ : any) {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.mkdirSync(`${this.basePath}${this.targetZip}`, true)\n        } catch (e) {\n          console.error(e)\n        }\n        fileManager.unzip({\n          zipFilePath: '/static/filemanager/to.zip',\n          targetPath: `${this.basePath}${this.targetZip}`,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'unzipFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('success', res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'unzipFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (_) => {\n            this.done = true\n          }\n        } as UnzipFileOptions)\n      },\n\n      getSavedFileListTest: function () {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.getSavedFileList({\n          success: (res : GetSavedFileListResult) => {\n            if (this.logAble) {\n              this.log += 'getSavedFileListTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log(\"getSavedFileListTest success\", res)\n            this.fileListSuccess = res.fileList\n            this.getSavedFileListRet = \"getSavedFileList:ok\"\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'getSavedFileListTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('getSavedFileListTest fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n            this.getSavedFileListRet = JSON.stringify(res)\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            } else {\n              this.fileListComplete = (res as GetSavedFileListResult).fileList\n            }\n          }\n        } as GetSavedFileListOptions)\n      },\n      truncateFileTest() {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.truncate({\n          filePath: `${this.basePath}${this.writeFile}`,\n          length: 7,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'truncateFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log(\"success\", res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'truncateFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as TruncateFileOptions)\n      },\n      truncateFileSyncTest() {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.truncateSync(\n            `${this.basePath}${this.writeFile}`,\n            4)\n          this.done = true\n        } catch (e) {\n          console.log(e)\n          this.done = true\n        }\n      },\n      readCompressedFileTest() {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.readCompressedFile({\n          filePath: '/static/filemanager/1.txt.br',\n          compressionAlgorithm: \"br\",\n          success: (res : ReadCompressedFileResult) => {\n            if (this.logAble) {\n              this.log += 'readCompressedFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log(\"success\", res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'readCompressedFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (_) => {\n            this.done = true\n          }\n        } as ReadCompressedFileOptions)\n      },\n      readCompressedFileSyncTest() {\n        console.log('readCompressedFileSyncTest')\n        const fileManager = uni.getFileSystemManager()\n        try {\n          let data = fileManager.readCompressedFileSync(\n            '/static/filemanager/1.txt.br',\n            \"br\")\n          if (this.logAble) {\n            this.log += data\n          }\n          this.done = true\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'readCompressedFileSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n\n      },\n      removeSavedFileTest() {\n        console.log(\"removeSavedFileTest enter\")\n        const fileManager = uni.getFileSystemManager()\n        fileManager.removeSavedFile({\n          filePath: `${this.basePath}${this.writeFile}`,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'removeSavedFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            this.removeSavedFileRet = res.errMsg\n            console.log(\"removeSavedFileTest success\", res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'removeSavedFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('removeSavedFileTest fail', res)\n          },\n          complete: (_) => {\n            this.done = true\n          }\n        } as RemoveSavedFileOptions)\n      },\n\n      statFileInfoSyncTest: function (_ : any) {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          let res = fileManager.statSync(\n            // path: `${this.basePath}${this.statFile}`, //USER_DATA_PATH\n            `${this.globalTempPath}${this.statFile}`, //CACHE_PATH\n            this.recursiveVal)\n          if (this.logAble) {\n            this.log += 'statFileInfoSyncTest success:' + JSON.stringify(res) + '\\n\\n'\n          }\n          this.statsRet = res\n          this.done = true\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'statFileInfoSyncTest fail:' + e + '\\n\\n'\n          }\n          this.done = true\n        }\n\n      },\n      openFileTest() {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.open({\n          filePath: `${this.basePath}${this.readFile}`,\n          flag: \"a\",\n          success: (res : OpenFileSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'openFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log(\"success\", res)\n            this.fd = res.fd\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'openFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (_) => {\n            this.done = true\n          }\n        } as OpenFileOptions)\n      },\n      openFileSyncTest(param : string) : string {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          let fd = fileManager.openSync({\n            filePath: `${this.basePath}${this.readFile}`,\n            flag: param,\n          } as OpenFileSyncOptions)\n          if (this.logAble) {\n            this.log += 'openFileSyncTest success:' + fd + '\\n\\n'\n          }\n          this.done = true\n          this.fd = fd\n          return fd\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'openFileSyncTest fail:' + JSON.stringify(e) + '\\n\\n'\n          }\n          console.log('fail', e)\n          this.done = true\n        }\n        return \"\"\n      },\n      closeSyncTest() {\n        console.log('closeSyncTest')\n        const fileManager = uni.getFileSystemManager()\n        try {\n          console.log('closeSync')\n          fileManager.closeSync({\n            fd: this.openFileSyncTest('r')\n          } as CloseSyncOptions)\n          if (this.logAble) {\n            this.log += 'closeSyncTest success:' + '\\n\\n'\n          }\n          this.done = true\n          this.closeFileRet = \"close:ok\"\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'closeSyncTest fail:' + JSON.stringify(e) + '\\n\\n'\n          }\n          console.log('fail', e)\n          this.done = true\n        }\n      },\n      closeTest() {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.close({\n          fd: this.openFileSyncTest('r'),\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'closeTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            this.closeFileRet = res.errMsg\n            console.log(\"success\", res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'closeTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (_) => {\n            this.done = true\n          }\n\n        } as CloseOptions)\n      },\n      writeTest() {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.mkdirSync(`${this.basePath}${this.mkdirFile}`, true)\n        } catch (e) {\n          console.error(e)\n        }\n\n        fileManager.write({\n          fd: this.openFileSyncTest('w+'),\n          data: this.writeData,\n          encoding: \"utf-8\",\n          success: (res : WriteResult) => {\n            if (this.logAble) {\n              this.log += 'writeTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log(\"success\", res)\n            this.bytesWritten = res.bytesWritten\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'writeTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (_) => {\n            this.done = true\n          }\n\n        } as WriteOptions)\n      },\n      writeSyncTest() {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.mkdirSync(`${this.basePath}${this.mkdirFile}`, true)\n        } catch (e) {\n          console.error(e)\n        }\n        fileManager.open({\n          filePath: `${this.basePath}${this.readFile}`,\n          flag: \"r+\",\n          success: (res : OpenFileSuccessResult) => {\n            console.log(\"success\", res)\n            if (res.fd.length <= 0) {\n              this.done = true\n              return\n            }\n            try {\n              let ret = fileManager.writeSync({\n                fd: res.fd,\n                data: this.writeData,\n                encoding: \"utf-8\"\n              } as WriteSyncOptions)\n              if (this.logAble) {\n                this.log += 'writeSyncTest success:' + JSON.stringify(ret) + '\\n\\n'\n              }\n              console.log(\"success\", ret)\n              this.done = true\n              this.bytesWritten = ret.bytesWritten\n            } catch (e) {\n              if (this.logAble) {\n                this.log += 'writeSyncTest fail:' + JSON.stringify(e) + '\\n\\n'\n              }\n              console.log('fail', e)\n              this.done = true\n            }\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'openFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n            this.done = true\n          }\n        } as OpenFileOptions)\n\n      },\n      fstatTest() {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.fstat({\n          fd: this.openFileSyncTest('r'),\n          success: (res : FStatSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'fstatTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log(\"success\", res)\n            this.fstat = res.stats\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'fstatTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (_) => {\n            this.done = true\n          }\n\n        } as FStatOptions)\n      },\n      fstatSyncTest() {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          let stat =\n            fileManager.fstatSync({\n              fd: this.openFileSyncTest('r'),\n            } as FStatSyncOptions)\n          if (this.logAble) {\n            this.log += 'fstatSyncTest success:' + JSON.stringify(stat) + '\\n\\n'\n          }\n          this.done = true\n          this.fstat = stat\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'fstatSyncTest fail:' + JSON.stringify(e) + '\\n\\n'\n          }\n          this.done = true\n        }\n      },\n      ftruncateFileTest() {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.ftruncate({\n          fd: this.openFileSyncTest('r+'),\n          length: 6,\n          success: (res : FileManagerSuccessResult) => {\n            if (this.logAble) {\n              this.log += 'ftruncateFileTest success:' + JSON.stringify(res) + '\\n\\n'\n            }\n            this.ftruncateRet = res.errMsg\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'ftruncateFileTest fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          },\n          complete: (res : any) => {\n            console.log(\"complete\", res)\n            this.done = true\n            if (res instanceof UniError) {\n              this.lastCompleteError = res\n            }\n          }\n        } as FTruncateFileOptions)\n      },\n      ftruncateFileSyncTest() {\n        const fileManager = uni.getFileSystemManager()\n        try {\n          fileManager.ftruncateSync({\n            fd: this.openFileSyncTest('r+'),\n            length: 4\n          } as FTruncateFileSyncOptions)\n          if (this.logAble) {\n            this.log += 'ftruncateFileSyncTest success:' + '\\n\\n'\n          }\n          this.done = true\n          this.ftruncateRet = 'ftruncate:ok'\n        } catch (e) {\n          if (this.logAble) {\n            this.log += 'ftruncateFileSyncTest fail:' + JSON.stringify(e) + '\\n\\n'\n          }\n          this.done = true\n        }\n      },\n      readZipEntry() {\n        const fileManager = uni.getFileSystemManager()\n        fileManager.readZipEntry({\n          filePath: '/static/filemanager/to.zip',\n          encoding: 'utf-8',\n          success: (res : EntriesResult) => {\n            if (this.logAble) {\n              this.log += 'readZipEntry success:size=' + res.result.size + '\\n\\n'\n            }\n            console.log(\"success\", res)\n          },\n          fail: (res : IUniError) => {\n            if (this.logAble) {\n              this.log += 'readZipEntry fail:' + JSON.stringify(res) + '\\n\\n'\n            }\n            console.log('fail', res)\n                        this.lastFailError=new UniError(res.errSubject, res.errCode, res.errMsg)\n\n          }\n        } as ReadZipEntryOptions)\n      },\n\n    },\n\n  }\n</script>\n\n<style>\n  .btnstyle {\n    margin: 4px;\n  }\n</style>\n",null],"names":[],"mappings":"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"}