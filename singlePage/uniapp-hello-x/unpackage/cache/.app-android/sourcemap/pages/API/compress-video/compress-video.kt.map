{"version":3,"sources":["pages/API/compress-video/compress-video.uvue","pages/API/choose-video/choose-video.uvue?type=page","pages/API/compress-video/compress-video.uvue?type=page","pages/API/get-video-info/get-video-info.uvue?type=page","node-modules/@dcloudio/uni-components/lib-x/unicloud-db/unicloud-db.vue","uni_modules/uni-upgrade-center-app/components/uni-upgrade-center-app/uni-upgrade-center-app.uvue","App.uvue"],"sourcesContent":["<template>\n\n  <scroll-view style=\"flex:1\">\n\n    <page-head :title=\"title\"></page-head>\n    <view class=\"uni-padding-wrap\">\n      <video class=\"video\" :src=\"beforeCompressPath\" :controls=\"true\"></video>\n      <view class=\"uni-title\">\n        <text class=\"uni-subtitle-text\">压缩前视频信息</text>\n      </view>\n      <text>{{beforeCompressVideoInfo}}</text>\n      <video class=\"video\" :src=\"afterCompressPath\" :controls=\"true\"></video>\n      <view class=\"uni-title\">\n        <text class=\"uni-subtitle-text\">压缩后视频信息</text>\n      </view>\n      <text>{{afterCompressVideoInfo}}</text>\n      <view class=\"uni-btn-v\">\n        <button type=\"primary\" @click=\"chooseVideo\">从相册中选取待压缩的视频</button>\n      </view>\n      <view class=\"uni-btn-v\">\n        <button type=\"primary\" @click=\"compressVideo\">压缩视频</button>\n      </view>\n      <enum-data title=\"压缩质量\" :items=\"qualityItemTypes\" @change=\"onQualityChange\"></enum-data>\n      <view class=\"uni-common-mt\">\n        <text class=\"uni-title uni-title-text\">相对于原视频的分辨率比例，取值范围(0, 1]</text>\n        <slider :min=\"0.1\" :max=\"1\" :step=\"0.1\" :show-value=\"true\" @change=\"onResolutionChange\"></slider>\n      </view>\n    </view>\n\n  </scroll-view>\n\n</template>\n\n<script>\n  import { ItemType } from '@/components/enum-data/enum-data';\n  export default {\n    data() {\n      return {\n        title: \"compressVideo\",\n        beforeCompressVideoInfo: \"\",\n        afterCompressVideoInfo: \"\",\n        beforeCompressPath: \"\",\n        afterCompressPath: \"\",\n        quality: null as string | null,\n        bitrate: null as number | null,\n        fps: null as number | null,\n        resolution: null as number | null,\n        qualityItemTypes: [{ \"value\": 0, \"name\": \"low(低)\" }, { \"value\": 1, \"name\": \"medium(中)\" }, { \"value\": 2, \"name\": \"high(高)\" }] as ItemType[],\n        qualityItems: [\"low\", \"medium\", \"high\"],\n        // 自动化测试\n        videoInfoForTest: null,\n        videoSrcForTest: '/static/test-video/10second-demo.mp4'\n      }\n    },\n    methods: {\n      compressVideo() {\n        if (this.beforeCompressPath == \"\") {\n          uni.showToast({\n            title: \"请先选择视频\",\n            icon: \"error\"\n          });\n          return;\n        }\n        uni.showLoading({\n          title: \"视频压缩中\"\n        });\n        uni.compressVideo({\n          src: this.beforeCompressPath,\n          quality: this.quality,\n          resolution: this.resolution,\n          success: (res) => {\n            console.log(\"compressVideo success\", JSON.stringify(res));\n            this.afterCompressPath = res.tempFilePath;\n            uni.showToast({\n              title: \"压缩成功\",\n              icon: null\n            });\n            uni.getVideoInfo({\n              src: res.tempFilePath,\n              success: (_res) => {\n                this.afterCompressVideoInfo = `视频画面方向: ${_res.orientation}\\n视频格式: ${_res.type}\\n视频长度: ${_res.duration}s\\n视频大小: ${_res.size}KB\\n视频宽度: ${_res.width}\\n视频高度: ${_res.height}\\n视频帧率: ${_res.fps}fps\\n视频码率: ${_res.bitrate}kbps`;\n              }\n            });\n          },\n          fail: (err) => {\n            uni.showModal({\n              title: \"压缩视频失败\",\n              content: JSON.stringify(err),\n              showCancel: false\n            });\n          },\n          complete: (_) => {\n            uni.hideLoading();\n          }\n        });\n      },\n      chooseVideo() {\n        uni.chooseVideo({\n          sourceType: [\"album\"],\n          compressed: false,\n          success: (res) => {\n            this.beforeCompressPath = res.tempFilePath;\n            uni.getVideoInfo({\n              src: res.tempFilePath,\n              success: (_res) => {\n                this.beforeCompressVideoInfo = `视频画面方向: ${_res.orientation}\\n视频格式: ${_res.type}\\n视频长度: ${_res.duration}s\\n视频大小: ${_res.size}KB\\n视频宽度: ${_res.width}\\n视频高度: ${_res.height}\\n视频帧率: ${_res.fps}fps\\n视频码率: ${_res.bitrate}kbps`;\n              }\n            });\n          }\n        });\n      },\n      onQualityChange(value : number) {\n        this.quality = this.qualityItems[value];\n      },\n      onResolutionChange(event : UniSliderChangeEvent) {\n        this.resolution = event.detail.value;\n      },\n      testCompressVideo() {\n        let beforeCompressSize: number, afterComoressSize: number;\n        uni.compressVideo({\n          src: this.videoSrcForTest,\n          quality: 'medium',\n          success: (res) => {\n            uni.getVideoInfo({\n              src: this.videoSrcForTest,\n              success: (_res) => {\n                beforeCompressSize = _res.size.toInt();\n                uni.getVideoInfo({\n                  src: res.tempFilePath,\n                  success: (__res) => {\n                    afterComoressSize = __res.size.toInt();\n                    this.videoInfoForTest = {\n                      \"width\": __res.width,\n                      \"height\": __res.height,\n                      \"isSizeReduce\": afterComoressSize < beforeCompressSize\n                    };\n                  }\n                });\n              }\n            });\n          },\n          fail: (_) => {\n            this.videoInfoForTest = null;\n          }\n        });\n      }\n    }\n  }\n</script>\n\n<style>\n  .video {\n    align-self: center;\n  }\n\n  .image-container {\n    flex-direction: row;\n  }\n</style>\n",null,null,null,null,null,null],"names":[],"mappings":";;;;;;;;;;;;;;;;;+BAqDK;+BAaO;+BAhBI;;;;+BAuCJ;AAtDL;;;;;;;;;eAjCL,mBA2Bc,eAAA,SA3BD,WAAc,eAAd,SAAA,UAAA;YAEX,YAAsC,sBAAA,SAA1B,WAAO,KAAA,KAAK,GAAA,IAAA,EAAA,CAAA,EAAA;gBAAA;aAAA;YACxB,mBAsBO,QAAA,SAtBD,WAAM,qBAAkB;gBAC5B,mBAAwE,SAAA,SAAjE,WAAM,SAAS,SAAK,KAAA,kBAAkB,EAAG,cAAU,IAAI;;;gBAC9D,mBAEO,QAAA,SAFD,WAAM,cAAW;oBACrB,mBAA8C,QAAA,SAAxC,WAAM,sBAAoB;;gBAElC,mBAAwC,QAAA,IAAA,EAAA,gBAAhC,KAAA,uBAAuB,GAAA,CAAA;gBAC/B,mBAAuE,SAAA,SAAhE,WAAM,SAAS,SAAK,KAAA,iBAAiB,EAAG,cAAU,IAAI;;;gBAC7D,mBAEO,QAAA,SAFD,WAAM,cAAW;oBACrB,mBAA8C,QAAA,SAAxC,WAAM,sBAAoB;;gBAElC,mBAAuC,QAAA,IAAA,EAAA,gBAA/B,KAAA,sBAAsB,GAAA,CAAA;gBAC9B,mBAEO,QAAA,SAFD,WAAM,cAAW;oBACrB,mBAAiE,UAAA,SAAzD,UAAK,WAAW,aAAO,KAAA,WAAW,GAAE,gBAAY,CAAA,EAAA;wBAAA;qBAAA;;gBAE1D,mBAEO,QAAA,SAFD,WAAM,cAAW;oBACrB,mBAA2D,UAAA,SAAnD,UAAK,WAAW,aAAO,KAAA,aAAa,GAAE,QAAI,CAAA,EAAA;wBAAA;qBAAA;;gBAEpD,YAAwF,sBAAA,SAA7E,WAAM,QAAQ,WAAO,KAAA,gBAAgB,EAAG,cAAQ,KAAA,eAAe;;;;gBAC1E,mBAGO,QAAA,SAHD,WAAM,kBAAe;oBACzB,mBAAqE,QAAA,SAA/D,WAAM,6BAA2B;oBACvC,YAAiG,mBAAA,SAAxF,SAAK,GAAG,EAAG,SAAK,CAAC,EAAG,UAAM,GAAG,EAAG,gBAAY,IAAI,EAAG,cAAQ,KAAA,kBAAkB;;;;;;;aAatF;aACA;aACA;aACA;aACA;aACA,SAAiB,MAAK;aACtB,SAAiB,MAAK;aACtB,KAAa,MAAK;aAClB,YAAoB,MAAK;aACzB;aACA;aAEA;aACA;;;wBAbA,WAAO,iBACP,6BAAyB,IACzB,4BAAwB,IACxB,wBAAoB,IACpB,uBAAmB,IACnB,aAAS,IAAG,CAAE,EAAC,CAAE,MAAK,GACtB,aAAS,IAAG,CAAE,EAAC,CAAE,MAAK,GACtB,SAAK,IAAG,CAAE,EAAC,CAAE,MAAK,GAClB,gBAAY,IAAG,CAAE,EAAC,CAAE,MAAK,GACzB,sBAAkB,wCAAY,CAAC,SAAU,6BAAuB,CAAC,SAAU,gCAA0B,CAAC,SAAU,aAChH,kBAAc;YAAC;YAAO;YAAU;SAAO,EAEvC,sBAAkB,IAAI,EACtB,qBAAiB;;;aAInB,gBAAA,MAAgB;YACd,IAAI,IAAI,CAAC,kBAAiB,IAAK,IAAI;gBACjC,+BACE,QAAO,UACP,OAAM;gBAER;YACF;YACA,mCACE,QAAO;YAET,uCACE,MAAK,IAAI,CAAC,kBAAkB,EAC5B,UAAS,IAAI,CAAC,OAAO,EACrB,aAAY,IAAI,CAAC,UAAU,EAC3B,UAAS,IAAC,IAAQ;gBAChB,QAAQ,GAAG,CAAC,yBAAyB,KAAK,SAAS,CAAC,MAAK;gBACzD,IAAI,CAAC,iBAAgB,GAAI,IAAI,YAAY;gBACzC,+BACE,QAAO,QACP,OAAM,IAAG;gBAEX,qCACE,MAAK,IAAI,YAAY,EACrB,UAAS,IAAC,KAAS;oBACjB,IAAI,CAAC,sBAAqB,GAAI,AAAC,2CAAU,KAAK,WAAW,GAAC,iCAAU,KAAK,IAAI,GAAC,iCAAU,KAAK,QAAQ,GAAC,kCAAW,KAAK,IAAI,GAAC,mCAAY,KAAK,KAAK,GAAC,iCAAU,KAAK,MAAM,GAAC,iCAAU,KAAK,GAAG,GAAC,oCAAa,KAAK,OAAO,GAAC;gBACvN;;YAEJ;cACA,OAAM,IAAC,IAAQ;gBACb,+BACE,QAAO,UACP,UAAS,KAAK,SAAS,CAAC,MACxB,aAAY,KAAI;YAEpB;cACA,WAAU,IAAC,EAAM;gBACf;YACF;;QAEJ;;aACA,cAAA,MAAc;YACZ,mCACE,aAAY;gBAAC;aAAQ,EACrB,aAAY,KAAK,EACjB,UAAS,IAAC,IAAQ;gBAChB,IAAI,CAAC,kBAAiB,GAAI,IAAI,YAAY;gBAC1C,qCACE,MAAK,IAAI,YAAY,EACrB,UAAS,IAAC,KAAS;oBACjB,IAAI,CAAC,uBAAsB,GAAI,AAAC,2CAAU,KAAK,WAAW,GAAC,iCAAU,KAAK,IAAI,GAAC,iCAAU,KAAK,QAAQ,GAAC,kCAAW,KAAK,IAAI,GAAC,mCAAY,KAAK,KAAK,GAAC,iCAAU,KAAK,MAAM,GAAC,iCAAU,KAAK,GAAG,GAAC,oCAAa,KAAK,OAAO,GAAC;gBACxN;;YAEJ;;QAEJ;;aACA,kBAAA,IAAgB,OAAQ,MAAM,EAAE;YAC9B,IAAI,CAAC,OAAM,GAAI,IAAI,CAAC,YAAY,CAAC,MAAM;QACzC;;aACA,qBAAA,IAAmB,OAAQ,oBAAoB,EAAE;YAC/C,IAAI,CAAC,UAAS,GAAI,MAAM,MAAM,CAAC,KAAK;QACtC;;aACA,oBAAA,MAAoB;YAClB,IAAI,oBAAoB,MAAM;gBAAE,mBAAmB,MAAM;YACzD,uCACE,MAAK,IAAI,CAAC,eAAe,EACzB,UAAS,UACT,UAAS,IAAC,IAAQ;gBAChB,qCACE,MAAK,IAAI,CAAC,eAAe,EACzB,UAAS,IAAC,KAAS;oBACjB,qBAAqB,KAAK,IAAI,CAAC,KAAK;oBACpC,qCACE,MAAK,IAAI,YAAY,EACrB,UAAS,IAAC,MAAU;wBAClB,oBAAoB,MAAM,IAAI,CAAC,KAAK;wBACpC,IAAI,CAAC,gBAAe,iBAAI;;gCACtB;gCAAS,MAAM,KAAK;;;gCACpB;gCAAU,MAAM,MAAM;;;gCACtB;iCAAgB,oBAAoB;;;oBAExC;;gBAEJ;;YAEJ;cACA,OAAM,IAAC,EAAM;gBACX,IAAI,CAAC,gBAAe,GAAI,IAAI;YAC9B;;QAEJ;;;sBA1FA;sBAyCA;sBAeA,kBAAgB,OAAQ,MAAM;sBAG9B,qBAAmB,OAAQ;sBAG3B;;;;;;;;;;;;;;;;;;;;;AA8BJ"}