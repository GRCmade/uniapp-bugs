{"version":3,"sources":["pages/template/calendar/calendar.uvue","pages/template/calendar/calendar.uvue?type=page"],"sourcesContent":["<template>\n  <view class=\"root\">\n    <view class=\"date\">\n      <text class=\"date-text\">{{ current_month }}</text>\n    </view>\n    <view ref=\"draw-header\" class=\"calendar-header\"></view>\n    <view ref=\"draw-weeks\" class=\"calendar-week\" @touchstart=\"select\"></view>\n    <view class=\"btn-group\">\n      <button size=\"mini\" @click=\"preDate\">上个月</button>\n      <button size=\"mini\" @click=\"gotoToday\">回到今天</button>\n      <button size=\"mini\" @click=\"nextDate\">下个月</button>\n    </view>\n    <view>{{ timeData.fullDate }} {{ current_day }}</view>\n  </view>\n</template>\n<script>\nimport { Calendar, DateType } from './index.uts'\n\ntype CoordsType = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  data: DateType\n}\n\nexport default {\n  data () {\n    return {\n      weeks: [] as Array<Array<DateType>>,\n      $coords: [] as Array<CoordsType>,\n      $calendar: new Calendar() as Calendar,\n      timeData: {\n        fullDate: '',\n        year: 0,\n        month: 0,\n        date: 0,\n        day: 0,\n        lunar: '',\n        disabled: false,\n        is_today: false\n      } as DateType,\n      testWidth: 0\n    }\n  },\n  computed: {\n    // 获取月份\n    current_month (): string {\n      const nowDate = this.timeData\n      const month = nowDate.month\n      return month < 10 ? '0' + month : month.toString()\n    },\n    current_day (): string {\n      const time = this.timeData.data\n      if (time == null) {\n        return ''\n      }\n      return time.IMonthCn + time.IDayCn\n    }\n  },\n  created () { },\n  onReady () {\n    const calendar = this.$data['$calendar'] as Calendar\n    this.weeks = calendar.getWeeks()\n    this.timeData = calendar.getDateInfo()\n    // 绘制日历头部\n    this.drawHeader()\n    this.drawWeek(this.weeks, '')\n\n    // 仅自动化测试\n    const header = this.$refs['draw-header'] as UniElement\n    this.testWidth = header.getBoundingClientRect().width;\n  },\n  methods: {\n\n    // 触发整个日历的点击事件，需要计算点击位置\n    select (event: TouchEvent) {\n      const refs = this.$refs['draw-weeks'] as UniElement\n      const rect = refs.getBoundingClientRect();\n      const dom_x = rect.left; // 元素左上角相对于视口的 X 坐标\n      const dom_y = rect.top; // 元素左上角相对于视口的 Y 坐标\n      const touch = event.touches[0];\n      const clientX = touch.clientX; // X 坐标\n      const clientY = touch.clientY; // Y 坐标\n      // 计算点击的相对位置\n      const x = clientX - dom_x\n      const y = clientY - dom_y\n\n      this.clickGrid(x, y)\n    },\n\n    // 点击具体的日历格子\n    clickGrid (x: number, y: number) {\n      // 小格子数组\n      // const gridArray = this.$data.$coords\n      const calendar = this.$data['$calendar'] as Calendar\n      const gridArray = this.$data['$coords'] as Array<CoordsType>\n\n      // 遍历小格子数组，找到最接近点击坐标的小格子\n      for (let i = 0; i < gridArray.length; i++) {\n        const grid = gridArray[i]\n        // 计算小格子理论上的最大值\n        const max_x = grid.x + grid.width\n        const max_y = grid.y + grid.height\n\n        const is_x_limit = grid.x < x && x < max_x\n        const is_y_limit = grid.y < y && y < max_y\n\n        const is_select = is_x_limit && is_y_limit\n\n        if (is_select) {\n          const data = grid.data\n          this.timeData = calendar.getDateInfo(data.fullDate)\n          this.drawWeek(this.weeks, grid.data.fullDate)\n        }\n      }\n    },\n    // 切换上个月\n    preDate () {\n      const fulldate = this.timeData.fullDate\n      const calendar = this.$data['$calendar'] as Calendar\n      const time = calendar.getDate(fulldate, -1, 'month')\n      this.timeData = calendar.getDateInfo(time.fullDate)\n\n      this.weeks = calendar.getWeeks(time.fullDate)\n\n      // 重新绘制日历\n      this.drawWeek(this.weeks, time.fullDate)\n\n    },\n    // 切换下个他\n    nextDate () {\n      const fulldate = this.timeData.fullDate\n      const calendar = this.$data['$calendar'] as Calendar\n      const time = calendar.getDate(fulldate, 1, 'month')\n      this.timeData = calendar.getDateInfo(time.fullDate)\n\n      this.weeks = calendar.getWeeks(time.fullDate)\n\n      // 重新绘制日历\n      this.drawWeek(this.weeks, time.fullDate)\n    },\n    // 回到今天\n    gotoToday () {\n      const calendar = this.$data['$calendar'] as Calendar\n      const time = calendar.getDate()\n      this.timeData = calendar.getDateInfo(time.fullDate)\n\n      this.weeks = calendar.getWeeks(time.fullDate)\n\n      // 重新绘制日历\n      this.drawWeek(this.weeks, time.fullDate)\n    },\n\n    // 绘制日历顶部信息\n    drawHeader () {\n      const refs = this.$refs['draw-header'] as UniElement\n      let ctx = refs.getDrawableContext()\n      if (ctx == null) return\n      const date_header_map = ['一', '二', '三', '四', '五', '六', '日']\n\n      const width = refs.getBoundingClientRect().width\n      const num = date_header_map.length\n      const one_width = width / num\n\n      ctx.font = '12'\n      ctx.textAlign = 'center'\n\n      for (let i = 0; i < num; i++) {\n        let box_left = i * one_width + 2\n        let box_width = one_width - 4\n        let box_height = 26\n\n        // 文本赋值\n        const text = date_header_map[i]\n        let text_left = box_width / 2 + box_left\n        let text_top = box_height / 2 + 6\n\n        ctx.fillText(text, text_left, text_top)\n        ctx.update()\n      }\n    },\n\n    // 绘制日历主体\n    drawWeek (weeks: Array<Array<DateType>>, time: string) {\n      const start_time = Date.now()\n      const refs = this.$refs['draw-weeks'] as UniElement\n      let ctx = refs.getDrawableContext()\n      if (ctx == null) return\n      const dom = refs.getBoundingClientRect()\n      const width = dom.width\n      const height = dom.height\n      let week_len = weeks.length\n      const one_width = width / weeks[0].length\n      const one_height = height / week_len\n\n      if (time !== '') {\n        this.$data['$coords'] = [] as Array<CoordsType>\n        ctx.reset()\n      }\n\n      ctx.textAlign = 'center'\n\n      for (let week = 0; week < week_len; week++) {\n\n        const week_item = weeks[week]\n        for (let day = 0; day < week_item.length; day++) {\n          const day_item = week_item[day]\n          let day_left = day * one_width + 2\n          let day_top = one_height * week + 2\n          let day_width = one_width - 4\n          let day_height = one_height - 4\n\n          // 文本赋值\n          let text = day_item.date.toString()\n          let text_left = day * one_width + (one_width / 2)\n          let text_top = one_height * week + 25\n\n          ctx.font = '16'\n\n          // 日期是否禁用\n          if (day_item.disabled) {\n            ctx.fillStyle = '#ccc'\n          } else {\n            // 是否为今天\n            if (day_item.is_today) {\n              ctx.fillStyle = 'red'\n            } else {\n              // 是否为选中\n              if (time === day_item.fullDate) {\n                ctx.fillStyle = 'blue'\n              } else {\n                ctx.fillStyle = '#666'\n              }\n            }\n\n            // 第一次渲染获取数据\n            // if (time === '') {\n            // 存储坐标组，用于点击事件\n            const coords: CoordsType = {\n              x: day_left,\n              y: day_top,\n              width: day_width,\n              height: day_height,\n              data: day_item\n            }\n\n            // TODO 兼容安卓data内$开头的属性的赋值问题\n            let gridArr = this.$data['$coords'] as Array<CoordsType>\n            gridArr.push(coords)\n            // }\n          }\n\n          ctx.fillText(text, text_left, text_top)\n\n          text = day_item.lunar\n          let lunar_left = day * one_width + (one_width / 2)\n          let lunar_top = one_height * week + 42\n          ctx.font = '10'\n          ctx.fillText(text, lunar_left, lunar_top)\n        }\n      }\n\n      ctx.update()\n      console.log('diff time', Date.now() - start_time);\n\n    }\n  }\n}\n</script>\n\n<style>\n.root {\n  flex: 1;\n  position: relative;\n  padding: 15px;\n  background-color: #fff;\n}\n\n.calendar-header {\n  height: 30px;\n  margin-bottom: 10px;\n}\n\n.date {\n  margin-bottom: 10px;\n  margin-left: 10px;\n}\n\n.date-text {\n  font-size: 34px;\n  font-weight: bold;\n}\n\n.calendar-week {\n  height: 350px;\n  margin: 2px 0;\n}\n\n.btn-group {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 20px 0;\n}\n</style>\n",null],"names":[],"mappings":"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"}