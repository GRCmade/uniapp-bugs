{"version":3,"sources":["pages/component/list-view/list-view-refresh.uvue","pages/component/list-view/list-view-refresh.uvue?type=page"],"sourcesContent":["<template>\r\n  <list-view v-if=\"list_show\" id=\"listview\" style=\"flex: 1;\" show-scrollbar=false :refresher-enabled=\"true\"\r\n    :refresher-triggered=\"refresherTriggered\" @refresherrefresh=\"onRefresherrefresh\" @refresherabort=\"onRefresherabort\" @refresherrestore=\"onRefresherrestore\" @refresherpulling=\"onRefresherpulling\">\r\n    <list-item class=\"item\">\n      <text>向下滑动触发下拉刷新</text>\n    </list-item>\n    <list-item v-for=\"index in item_count\" class=\"item\">\r\n      <text>item-------{{index}}</text>\r\n    </list-item>\r\n  </list-view>\r\n</template>\r\n\r\n<script>\n  type RefresherEventTest = {\n    type: string;\n    target: UniElement | null;\n    currentTarget: UniElement | null;\n    dy:number;\n  }\r\n  export default {\r\n    data() {\r\n      return {\r\n        item_count: 20,\r\n        list_show: false,\r\n        refresherTriggered: true,\n        // 自动化测试使用\n        refresherrefreshTest:\"\",\n        onRefresherabortTest:\"\",\n        onRefresherrestoreTest:\"\",\n        onRefresherpullingTest:\"\"\r\n      }\r\n    },\r\n    onLoad() {\n      //延迟显示list-view\r\n      setTimeout(() => {\r\n        this.list_show = true;\r\n      }, 500)\r\n    },\r\n    methods: {\r\n      onRefresherrefresh(e:UniRefresherEvent) {\n        console.log('refresherrefresh-----下拉刷新被触发', e.detail.dy);\r\n        this.refresherTriggered = true;\n        this.checkEventTest({\n          type:e.type,\n          target:e.target,\n          currentTarget:e.currentTarget,\n          dy:e.detail.dy,\n        } as RefresherEventTest,'refresherrefresh')\r\n        setTimeout(() => {\r\n          this.refresherTriggered = false;\r\n        }, 1000)\r\n      },\n      onRefresherabort(e:UniRefresherEvent) {\n        console.log(\"onRefresherabort------下拉刷新被中止\",e.detail)\n        this.checkEventTest({\n          type:e.type,\n          target:e.target,\n          currentTarget:e.currentTarget,\n          dy:e.detail.dy,\n        } as RefresherEventTest,'refresherabort')\n      },\n      onRefresherrestore(e:UniRefresherEvent) {\n        console.log(\"onRefresherrestore------下拉刷新被复位\",e.detail.dy)\n        this.checkEventTest({\n          type:e.type,\n          target:e.target,\n          currentTarget:e.currentTarget,\n          dy:e.detail.dy,\n        } as RefresherEventTest,'refresherrestore')\n      },\n      onRefresherpulling(e:UniRefresherEvent) {\n        console.log(\"onRefresherpulling------拉刷新控件被下拉-dy=\" + e.detail.dy)\n        this.checkEventTest({\n          type:e.type,\n          target:e.target,\n          currentTarget:e.currentTarget,\n          dy:e.detail.dy,\n        } as RefresherEventTest,'refresherpulling')\n      },\n      // 自动化测试专用（由于事件event参数对象中存在循环引用，在ios端JSON.stringify报错，自动化测试无法page.data获取）\n      checkEventTest(e:RefresherEventTest, eventName:String){\n        const isPass = e.type === eventName && e.target instanceof UniElement && e.currentTarget instanceof UniElement && e.dy>0;\n        const result = isPass ? `${eventName}:Success` : `${eventName}:Fail`;\n        switch (eventName){\n          case 'refresherrefresh':\n            this.refresherrefreshTest = result\n            break;\n          case 'refresherpulling':\n            this.onRefresherpullingTest =  result\n            break;\n          case 'refresherrestore':\n            this.onRefresherrestoreTest =  result\n            break;\n          case 'refresherabort':\n            this.onRefresherabortTest =  result\n            break;\n          default:\n            break;\n        }\n      }\n    }\r\n  }\r\n</script>\r\n<style>\r\n  .item {\r\n    padding: 15px;\r\n    margin: 0 0 5px 0;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .button_item {\r\n    width: 200px;\r\n  }\r\n</style>\n",null],"names":[],"mappings":"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"}