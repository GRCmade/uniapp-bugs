{"version":3,"sources":["node-modules/@dcloudio/uni-components/lib-x/unicloud-db/unicloud-db.vue","uni_modules/uni-upgrade-center-app/components/uni-upgrade-center-app/uni-upgrade-center-app.uvue","App.uvue"],"sourcesContent":["<template>\n  <uni-cloud-db-element ref=\"UniCloudDB\">\n    <slot :data=\"dataList\" :loading=\"loading\" :hasMore=\"hasMore\" :pagination=\"pagination\" :error=\"error\" />\n  </uni-cloud-db-element>\n</template>\n\n<script lang=\"uts\">\n\n  import { SlotsType } from 'vue'\n\n\n\n\n\n\n  const EVENT_LOAD = 'load'\n  const EVENT_ERROR = 'error'\n  const PAGE_MODE_ADD = 'add'\n  const PAGE_MODE_REPLACE = 'replace'\n  const LOAD_MODE_AUTO = 'auto'\n  const LOAD_MODE_MANUAL = 'manual'\n  // const LOAD_MODE_ONREADY = 'onready'\n\n  type SuccessCallback<T> = (res : T | null) => void | null\n  type FailCallback = (err : any | null) => void | null\n  type CompleteCallback = () => void | null\n\n  type GetSuccessCallback = SuccessCallback<UniCloudDBGetResult>\n  type AddSuccessCallback = SuccessCallback<UniCloudDBAddResult>\n  type RemoveSuccessCallback = SuccessCallback<UniCloudDBRemoveResult>\n  type UpdateSuccessCallback = SuccessCallback<UniCloudDBUpdateResult>\n\n  export type UniCloudDBComponentPaginationType = {\n    current : number,\n    size : number,\n    count : number\n  }\n\n  export type UniCloudDBComponentLoadDataOptions = {\n    clear ?: boolean | null,\n    current ?: number | null,\n    success ?: GetSuccessCallback,\n    fail ?: FailCallback,\n    complete ?: CompleteCallback,\n  }\n\n  export type UniCloudDBComponentAddOptions = {\n    /**\n     * @default true\n     */\n    showToast ?: boolean | null,\n    toastTitle ?: string | null,\n    /**\n     * @default true\n     */\n    needLoading ?: boolean | null,\n    loadingTitle ?: string | null,\n    success ?: AddSuccessCallback,\n    fail ?: FailCallback,\n    complete ?: CompleteCallback,\n  }\n\n  export type UniCloudDBComponentRemoveOptions = {\n    confirmTitle ?: string | null,\n    confirmContent ?: string | null,\n    /**\n     * @default true\n     */\n    needConfirm ?: boolean | null,\n    /**\n     * @default true\n     */\n    needLoading ?: boolean | null,\n    loadingTitle ?: string | null,\n    success ?: RemoveSuccessCallback,\n    fail ?: FailCallback,\n    complete ?: CompleteCallback,\n  }\n\n  export type UniCloudDBComponentUpdateOptions = {\n    /**\n     * @default true\n     */\n    showToast ?: boolean | null,\n    toastTitle ?: string | null,\n    confirmTitle ?: string | null,\n    confirmContent ?: string | null,\n    /**\n     * @default true\n     */\n    needConfirm ?: boolean | null,\n    /**\n     * @default true\n     */\n    needLoading ?: boolean | null,\n    loadingTitle ?: string | null,\n    success ?: UpdateSuccessCallback,\n    fail ?: FailCallback,\n    complete ?: CompleteCallback,\n  }\n\n  function cast_callback<T>(options : any | null) : T | null {\n    return options as T | null\n  }\n\n\n  export class UniCloudDBElement extends UniViewElementImpl {\n    constructor(data : INodeData, pageNode : PageNode) {\n      super(data, pageNode)\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    dataList : Array<UTSJSONObject> = []\n\n    loadData(options : UTSJSONObject = {}) {\n      this.onLoadData({\n        clear: options.getBoolean('clear'),\n        current: options.getNumber('current'),\n        success: cast_callback<GetSuccessCallback>(options['success']),\n        fail: cast_callback<FailCallback>(options['fail']),\n        complete: cast_callback<CompleteCallback>(options['complete'])\n      } as UniCloudDBComponentLoadDataOptions)\n    }\n\n    loadMore() {\n      this.onLoadMore()\n    }\n\n    add(value : UTSJSONObject, options : UTSJSONObject) {\n      this.onAdd(value, {\n        showToast: options.getBoolean('showToast') ?? true,\n        toastTitle: options.getString('toastTitle'),\n        needLoading: options.getBoolean('needLoading') ?? true,\n        loadingTitle: options.getString('loadingTitle'),\n        success: cast_callback<AddSuccessCallback>(options['success']),\n        fail: cast_callback<FailCallback>(options['fail']),\n        complete: cast_callback<CompleteCallback>(options['complete'])\n      } as UniCloudDBComponentAddOptions)\n    }\n    // @ts-ignore\n    remove(id : any, options : UTSJSONObject) {\n\n\n\n\n\n\n\n\n      this.onRemove(id, {\n        confirmTitle: options.getString('confirmTitle'),\n        confirmContent: options.getString('confirmContent'),\n        needConfirm: options.getBoolean('needConfirm') ?? true,\n        needLoading: options.getBoolean('needLoading') ?? true,\n        loadingTitle: options.getString('loadingTitle'),\n        success: cast_callback<RemoveSuccessCallback>(options['success']),\n        fail: cast_callback<FailCallback>(options['fail']),\n        complete: cast_callback<CompleteCallback>(options['complete'])\n      } as UniCloudDBComponentRemoveOptions)\n    }\n\n    update(id : string, value : UTSJSONObject, options : UTSJSONObject) {\n      this.onUpdate(id, value, {\n        showToast: options.getBoolean('showToast') ?? true,\n        toastTitle: options.getString('toastTitle'),\n        confirmTitle: options.getString('confirmTitle'),\n        confirmContent: options.getString('confirmContent'),\n        needConfirm: options.getBoolean('needConfirm') ?? true,\n        needLoading: options.getBoolean('needLoading') ?? true,\n        loadingTitle: options.getString('loadingTitle'),\n        success: cast_callback<UpdateSuccessCallback>(options['success']),\n        fail: cast_callback<FailCallback>(options['fail']),\n        complete: cast_callback<CompleteCallback>(options['complete'])\n      } as UniCloudDBComponentUpdateOptions)\n    }\n\n    onLoadData! : (_ : UniCloudDBComponentLoadDataOptions) => Promise<void>\n    onLoadMore! : () => void\n    onAdd! : (value : UTSJSONObject, options : UniCloudDBComponentAddOptions) => void\n    onUpdate!: (id : string, value : UTSJSONObject, options : UniCloudDBComponentUpdateOptions) => void\n    onRemove!: (id : any, options : UniCloudDBComponentRemoveOptions) => void\n  }\n\n  export default {\n    name: 'UniCloudDB',\n    rootElement: {\n      name: 'uni-cloud-db-element',\n      class: UniCloudDBElement\n    },\n    slots: Object as SlotsType<{\n      default : {\n        data : Array<UTSJSONObject>,\n        loading : boolean,\n        hasMore : boolean,\n        pagination : UniCloudDBComponentPaginationType,\n        error : UniCloudError | null\n      }\n    }>,\n    props: {\n      collection: {\n        type: [String, Object],\n        default: ''\n      },\n      field: {\n        type: String,\n        default: ''\n      },\n      orderby: {\n        type: String,\n        default: ''\n      },\n      where: {\n        type: [String, Object],\n        default: ''\n      },\n      pageData: {\n        type: String,\n        default: 'add'\n      },\n      pageCurrent: {\n        type: Number,\n        default: 1\n      },\n      pageSize: {\n        type: Number,\n        default: 20\n      },\n      getcount: {\n        type: Boolean,\n        default: false\n      },\n      gettree: {\n        type: [String, Object],\n        default: ''\n      },\n      gettreepath: {\n        type: Boolean,\n        default: false\n      },\n      startwith: {\n        type: String,\n        default: ''\n      },\n      limitlevel: {\n        type: Number,\n        default: 10\n      },\n      groupby: {\n        type: String,\n        default: ''\n      },\n      groupField: {\n        type: String,\n        default: ''\n      },\n      distinct: {\n        type: Boolean,\n        default: false\n      },\n      pageIndistinct: {\n        type: Boolean,\n        default: false\n      },\n      foreignKey: {\n        type: String,\n        default: ''\n      },\n      loadtime: {\n        type: String,\n        default: 'auto'\n      },\n      manual: {\n        type: Boolean,\n        default: false\n      },\n      ssrKey: {\n        type: String,\n        default: \"\"\n      }\n    },\n    data() {\n      return {\n\n\n\n\n\n\n        dataList: [] as Array<UTSJSONObject>,\n\n        // dataList: [] as Array<UTSJSONObject>,\n        loading: false,\n        hasMore: false,\n        isEnded: false,\n        pagination: {\n          current: 1,\n          size: 20,\n          count: 0,\n        } as UniCloudDBComponentPaginationType,\n        error: null as UniCloudError | null\n      }\n    },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    created() {\n      this.pagination.current = this.pageCurrent\n      this.pagination.size = this.pageSize\n\n      this.$watch(\n        () : any => [\n          this.pageCurrent,\n          this.pageSize,\n          this.collection,\n          this.field,\n          this.getcount,\n          this.orderby,\n          this.where,\n          this.groupby,\n          this.groupField,\n          this.distinct\n        ],\n        (newValue : Array<any>, oldValue : Array<any>) => {\n          this.pagination.size = this.pageSize\n          if (newValue[0] !== oldValue[0]) {\n            this.pagination.current = this.pageCurrent\n          }\n\n          if (this.loadtime == LOAD_MODE_MANUAL) {\n            return\n          }\n\n          let needReset = false\n          for (let i = 2; i < newValue.length; i++) {\n            if (newValue[i] !== oldValue[i]) {\n              needReset = true\n              break\n            }\n          }\n          if (needReset) {\n            this.clear()\n            this.reset()\n          }\n\n          this.get(null)\n        }\n      )\n\n      if (!this.manual && this.loadtime == LOAD_MODE_AUTO && this.dataList.length == 0) {\n        if (typeof this.collection == 'string') {\n          const collectionString = this.collection as string\n          if (collectionString.length == 0) {\n            return\n          }\n        } else if (Array.isArray(this.collection)) {\n          const collectionArray = this.collection as Array<any>\n          if (collectionArray.length == 0) {\n            return\n          }\n        }\n        this.get(null)\n      }\n    },\n    mounted() {\n      const uniCloudDBElement = this.$refs['UniCloudDB'] as UniCloudDBElement\n      uniCloudDBElement.dataList = this.dataList;\n\n\n      uniCloudDBElement.onLoadData = this.loadData;\n      uniCloudDBElement.onLoadMore = this.loadMore;\n      uniCloudDBElement.onAdd = this.add;\n      uniCloudDBElement.onUpdate = this.update;\n      uniCloudDBElement.onRemove = this.remove;\n\n\n\n\n\n\n\n\n    },\n    methods: {\n      async loadData(options : UniCloudDBComponentLoadDataOptions) : Promise<void> {\n        let clear = (options.clear != null && options.clear == true)\n        if (clear == true) {\n          if (this.pageData == PAGE_MODE_REPLACE) {\n            this.clear()\n          }\n          this.reset()\n        }\n\n        await this.get(options)\n      },\n      loadMore() {\n        if (this.isEnded || this.loading) {\n          return\n        }\n\n        if (this.pageData == PAGE_MODE_ADD) {\n          this.pagination.current++\n        }\n\n        this.get(null)\n      },\n      refresh() {\n        this.clear()\n        this.get(null)\n      },\n      clear() {\n        this.isEnded = false\n        this.dataList.length = 0\n      },\n      reset() {\n        this.pagination.current = 1\n      },\n      async get(options? : UniCloudDBComponentLoadDataOptions | null) : Promise<void> {\n        let loadAfterClear = false\n        if (options != null && options.clear != null && options.clear == true) {\n          loadAfterClear = true\n        }\n        if (options != null && options.current != null) {\n          this.pagination.current = options.current!\n        }\n\n        this.error = null\n\n        this.loading = true\n        await this.getExec().then((res : UniCloudDBGetResult) => {\n          const data = res.data\n          const count = res.count\n\n          this.isEnded = (count != null) ? (this.pagination.current * this.pagination.size >= count) : (data.length < this.pageSize)\n          this.hasMore = !this.isEnded\n\n          if (this.getcount && count != null) {\n            this.pagination.count = count\n          }\n\n          this._dispatchEvent(EVENT_LOAD, data)\n\n          if (loadAfterClear || this.pageData == PAGE_MODE_REPLACE) {\n            this.dataList = data\n          } else {\n            this.dataList.push(...data)\n          }\n\n          options?.success?.(res)\n        }).catch((err : any | null) => {\n          this._requestFail(err, null)\n          options?.fail?.(err)\n        }).then(() => {\n          this.loading = false\n          options?.complete?.()\n        }, () => {\n          this.loading = false\n          options?.complete?.()\n        })\n      },\n      add(value : UTSJSONObject, options : UniCloudDBComponentAddOptions) {\n        this._needLoading(options.needLoading, options.loadingTitle)\n        const db = uniCloud.databaseForJQL()\n        db.collection(this._getMainCollection()).add(value).then<void>((res : UniCloudDBAddResult) => {\n          options.success?.(res)\n          this._isShowToast(options.showToast ?? false, options.toastTitle ?? 'add success')\n        }).catch((err) => {\n          this._requestFail(err, options.fail)\n        }).then(() => {\n          this._requestComplete(options.complete, options.needLoading)\n        }, () => {\n          this._requestComplete(options.complete, options.needLoading)\n        })\n      },\n      update(id : string, value : UTSJSONObject, options : UniCloudDBComponentUpdateOptions) {\n        if (options.needConfirm == true) {\n          uni.showModal({\n            title: options.confirmTitle,\n            content: options.confirmContent,\n            showCancel: true,\n            success: (res) => {\n              if (res.confirm) {\n                this._update(id, value, options)\n              }\n            }\n          })\n        } else {\n          this._update(id, value, options)\n        }\n      },\n      remove(id : any, options : UniCloudDBComponentRemoveOptions) {\n        const ids = Array.isArray(id) ? (id as Array<any>) : [id]\n        if (options.needConfirm == true) {\n          uni.showModal({\n            title: options.confirmTitle,\n            content: options.confirmContent,\n            showCancel: true,\n            success: (res) => {\n              if (res.confirm) {\n                this._remove(ids, options)\n              }\n            }\n          })\n        } else {\n          this._remove(ids, options)\n        }\n      },\n      _update(id : string, value : UTSJSONObject, options : UniCloudDBComponentUpdateOptions) {\n        this._needLoading(options.needLoading, options.loadingTitle)\n        const db = uniCloud.databaseForJQL()\n        db.collection(this._getMainCollection()).doc(id).update(value).then((res) => {\n          options.success?.(res)\n          this._isShowToast(options.showToast ?? false, options.toastTitle ?? 'update success')\n        }).catch((err : any | null) => {\n          this._requestFail(err, options.fail)\n        }).then(() => {\n          this._requestComplete(options.complete, options.needLoading)\n        }, () => {\n          this._requestComplete(options.complete, options.needLoading)\n        })\n      },\n      _remove(ids : Array<any>, options : UniCloudDBComponentRemoveOptions) {\n        this._needLoading(options.needLoading, options.loadingTitle)\n        const db = uniCloud.databaseForJQL()\n        const dbCommand = db.command\n        db.collection(this._getMainCollection()).where({\n          _id: dbCommand.in(ids)\n        }).remove().then((res) => {\n          options.success?.(res)\n          if (this.pageData == PAGE_MODE_REPLACE) {\n            this.refresh()\n          } else {\n            this._removeData(ids)\n          }\n        }).catch((err : any | null) => {\n          this._requestFail(err, options.fail)\n        }).then(() => {\n          this._requestComplete(options.complete, options.needLoading)\n        }, () => {\n          this._requestComplete(options.complete, options.needLoading)\n        })\n      },\n      _removeData(ids : Array<any>) {\n        const il = ids.slice(0)\n        const dl = this.dataList\n        for (let i = dl.length - 1; i >= 0; i--) {\n          const index = il.indexOf(dl[i]['_id'])\n          if (index >= 0) {\n            dl.splice(i, 1)\n            il.splice(index, 1)\n          }\n        }\n      },\n      _isShowToast(showToast : boolean, title : string) {\n        if (showToast == true) {\n          uni.showToast({\n            title: title\n          })\n        }\n      },\n      _needLoading(needLoading ?: boolean | null, title ?: string | null) {\n        if (needLoading == true) {\n          uni.showLoading({\n            mask: true,\n            title: title ?? ''\n          })\n        }\n      },\n      _requestFail(err ?: any | null, callback ?: FailCallback | null) {\n        callback?.(err)\n        this.error = err as UniCloudError\n        this.$emit(EVENT_ERROR, err)\n      },\n      _requestComplete(callback ?: CompleteCallback | null, needLoading ?: boolean | null) {\n        callback?.()\n        if (needLoading == true) {\n          uni.hideLoading()\n        }\n      },\n      getExec() : Promise<UniCloudDBGetResult> {\n        return this.getTemp()\n      },\n      getTemp() : Promise<UniCloudDBGetResult> {\n        let db = uniCloud.databaseForJQL()\n\n        let collection = Array.isArray(this.collection) ? db.collection(...(this.collection as Array<any>)) : db.collection(this.collection)\n\n        let filter : UniCloudDBFilter | null = null\n        if (this.foreignKey.length > 0) {\n          filter = collection.foreignKey(this.foreignKey)\n        }\n\n        if (typeof this.where == 'string') {\n          const whereString = this.where as string\n          if (whereString.length > 0) {\n            filter = (filter != null) ? filter.where(this.where) : collection.where(this.where)\n          }\n        } else if (typeof this.where == 'object') {\n          filter = (filter != null) ? filter.where(this.where) : collection.where(this.where)\n        }\n\n        let query : UniCloudDBQuery | null = null\n        if (this.field.length > 0) {\n          query = (filter != null) ? filter.field(this.field) : collection.field(this.field)\n        }\n        if (this.groupby.length > 0) {\n          if (query != null) {\n            query = query.groupBy(this.groupby)\n          } else if (filter != null) {\n            query = filter.groupBy(this.groupby)\n          }\n        }\n        if (this.groupField.length > 0) {\n          if (query != null) {\n            query = query.groupField(this.groupField)\n          } else if (filter != null) {\n            query = filter.groupField(this.groupField)\n          }\n        }\n        if (this.distinct == true) {\n          if (query != null) {\n            query = query.distinct(this.field)\n          } else if (filter != null) {\n            query = filter.distinct(this.field)\n          }\n        }\n        if (this.orderby.length > 0) {\n          if (query != null) {\n            query = query.orderBy(this.orderby)\n          } else if (filter != null) {\n            query = filter.orderBy(this.orderby)\n          } else {\n            query = collection.orderBy(this.orderby)\n          }\n        }\n\n        const size = this.pagination.size\n        const current = this.pagination.current\n        const skipSize = size * (current - 1)\n        if (query != null) {\n          query = query.skip(skipSize).limit(size)\n        } else if (filter != null) {\n          query = filter.skip(skipSize).limit(size)\n        } else {\n          query = collection.skip(skipSize).limit(size)\n        }\n\n        const getOptions = {}\n        const treeOptions = {\n          limitLevel: this.limitlevel,\n          startWith: this.startwith\n        }\n        if (this.getcount == true) {\n          getOptions['getCount'] = this.getcount\n        }\n        if (typeof this.gettree == 'string') {\n          const getTreeString = this.gettree as string\n          if (getTreeString.length > 0) {\n            getOptions['getTree'] = treeOptions\n          }\n        } else if (typeof this.gettree == 'object') {\n          getOptions['getTree'] = treeOptions\n        }\n        if (this.gettreepath == true) {\n          getOptions['getTreePath'] = treeOptions\n        }\n\n        return query.get(getOptions)\n      },\n      _getMainCollection() : string {\n        if (typeof this.collection === 'string') {\n          return (this.collection as string).split(',')[0]\n        }\n\n        if (Array.isArray(this.collection)) {\n          const array = this.collection as Array<any>\n          const index = array[0] as UTSJSONObject\n          const collection = index.getString('$db[0].$param[0]')\n          return collection ?? ''\n        }\n\n        return ''\n      },\n      _dispatchEvent(type : string, data : Array<UTSJSONObject>) {\n        this.$emit(type, data, this.isEnded, {\n          current: this.pagination.current,\n          size: this.pagination.size,\n          count: this.pagination.count\n        })\n      }\n    }\n  }\n</script>",null,null],"names":[],"mappings":"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"}