{"code":"/**\n    * 农历1900-2100的润大小信息表\n    * @Array Of Property\n    * @return Hex\n    */\n/* 源数据说明：\n *   lunarYear数据来自香港天文台提供的源数据反向推导得出，其中201项数据分别对应1900-2100年。\n *   示例： 2021年 -- 0x06aa0\n *   ╭-------┰-------┰-------┰-------┰--------╮\n *   ┆ 0000  ┆ 0110  ┆ 1010  ┆ 1010  ┆ 0000   ┆\n *   ┠-------╊-------╊-------╊-------╊--------┨\n *   ┆ 20-17 ┆ 16-12 ┆ 12-9  ┆  8-5  ┆  4-1   ┆\n *   ╰-------┸-------┸-------┸-------┸--------╯\n *   1-4: 表示当年有无闰年，有的话，为闰月的月份，没有的话，为0。 2021年无闰月\n *   5-16：为除了闰月外的正常月份是大月还是小月，1为30天，0为29天。从1月到12月对应的是第16位到第5位，2021年各月天数[29,30,30,29,30,29,30,29,30,29,30,29]\n *   17-20： 表示闰月是大月还是小月，仅当存在闰月的情况下有意义。(0/1,即闰大/小月)\n */\nconst lunarYears = [\n    0x04bd8,\n    // 1901-2000\n    0x04ae0, 0x0a570, 0x054d5, 0x0d260, 0x0d950, 0x16554, 0x056a0, 0x09ad0, 0x055d2, 0x04ae0,\n    0x0a5b6, 0x0a4d0, 0x0d250, 0x1d255, 0x0b540, 0x0d6a0, 0x0ada2, 0x095b0, 0x14977, 0x04970,\n    0x0a4b0, 0x0b4b5, 0x06a50, 0x06d40, 0x1ab54, 0x02b60, 0x09570, 0x052f2, 0x04970, 0x06566,\n    0x0d4a0, 0x0ea50, 0x16a95, 0x05ad0, 0x02b60, 0x186e3, 0x092e0, 0x1c8d7, 0x0c950, 0x0d4a0,\n    0x1d8a6, 0x0b550, 0x056a0, 0x1a5b4, 0x025d0, 0x092d0, 0x0d2b2, 0x0a950, 0x0b557, 0x06ca0,\n    0x0b550, 0x15355, 0x04da0, 0x0a5b0, 0x14573, 0x052b0, 0x0a9a8, 0x0e950, 0x06aa0, 0x0aea6,\n    0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260, 0x0f263, 0x0d950, 0x05b57, 0x056a0, 0x096d0,\n    0x04dd5, 0x04ad0, 0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b6a0, 0x195a6, 0x095b0,\n    0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40, 0x0af46, 0x0ab60, 0x09570, 0x04af5,\n    0x04970, 0x064b0, 0x074a3, 0x0ea50, 0x06b58, 0x05ac0, 0x0ab60, 0x096d5, 0x092e0, 0x0c960,\n    // 2001-2100\n    0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0, 0x092d0, 0x0cab5, 0x0a950,\n    0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9, 0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930, 0x07954,\n    0x06aa0, 0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65, 0x0d530, 0x05aa0,\n    0x076a3, 0x096d0, 0x04afb, 0x04ad0, 0x0a4d0, 0x1d0b6, 0x0d250, 0x0d520, 0x0dd45, 0x0b5a0,\n    0x056d0, 0x055b2, 0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0, 0x14b63,\n    0x09370, 0x049f8, 0x04970, 0x064b0, 0x168a6, 0x0ea50, 0x06b20, 0x1a6c4, 0x0aae0, 0x092e0,\n    0x0d2e3, 0x0c960, 0x0d557, 0x0d4a0, 0x0da50, 0x05d55, 0x056a0, 0x0a6d0, 0x055d4, 0x052d0,\n    0x0a9b8, 0x0a950, 0x0b4a0, 0x0b6a6, 0x0ad50, 0x055a0, 0x0aba4, 0x0a5b0, 0x052b0, 0x0b273,\n    0x06930, 0x07337, 0x06aa0, 0x0ad50, 0x14b55, 0x04b60, 0x0a570, 0x054e4, 0x0d160, 0x0e968,\n    0x0d520, 0x0daa0, 0x16aa6, 0x056d0, 0x04ae0, 0x0a9d4, 0x0a2d0, 0x0d150, 0x0f252, 0x0d520\n];\n// ['月','正','一','二','三','四','五','六','七','八','九','十','冬','腊'];\nconst N_STR_3 = [\"\\u6708\", \"\\u6b63\", \"\\u4e8c\", \"\\u4e09\", \"\\u56db\", \"\\u4e94\", \"\\u516d\", \"\\u4e03\", \"\\u516b\", \"\\u4e5d\", \"\\u5341\", \"\\u51ac\", \"\\u814a\"];\n// ['日','一','二','三','四','五','六','七','八','九','十']\nconst N_STR_1 = [\"\\u65e5\", \"\\u4e00\", \"\\u4e8c\", \"\\u4e09\", \"\\u56db\", \"\\u4e94\", \"\\u516d\", \"\\u4e03\", \"\\u516b\", \"\\u4e5d\", \"\\u5341\"];\n// ['初','十','廿','卅','闰']\nconst N_STR_2 = [\"\\u521d\", \"\\u5341\", \"\\u5eff\", \"\\u5345\", \"\\u95f0\"];\nexport class InfoType extends UTS.UTSType {\n    static get$UTSMetadata$() {\n        return {\n            kind: 2,\n            get fields() {\n                return {\n                    lunarY: { type: Number, optional: false },\n                    lunarM: { type: Number, optional: false },\n                    lunarD: { type: Number, optional: false },\n                    isLeap: { type: Boolean, optional: false }\n                };\n            }\n        };\n    }\n    constructor(options, metadata = InfoType.get$UTSMetadata$(), isJSONParse = false) {\n        super();\n        this.__props__ = UTS.UTSType.initProps(options, metadata, isJSONParse);\n        this.lunarY = this.__props__.lunarY;\n        this.lunarM = this.__props__.lunarM;\n        this.lunarD = this.__props__.lunarD;\n        this.isLeap = this.__props__.isLeap;\n        delete this.__props__;\n    }\n}\nexport class LunarInfoType extends UTS.UTSType {\n    static get$UTSMetadata$() {\n        return {\n            kind: 2,\n            get fields() {\n                return {\n                    lYear: { type: Number, optional: false },\n                    lMonth: { type: Number, optional: false },\n                    lDay: { type: Number, optional: false },\n                    IMonthCn: { type: String, optional: false },\n                    IDayCn: { type: String, optional: false },\n                    cYear: { type: Number, optional: false },\n                    cMonth: { type: Number, optional: false },\n                    cDay: { type: Number, optional: false },\n                    gzYear: { type: String, optional: true },\n                    gzMonth: { type: String, optional: true },\n                    gzDay: { type: String, optional: true },\n                    isToday: { type: Boolean, optional: false },\n                    isLeap: { type: Boolean, optional: false },\n                    nWeek: { type: Number, optional: true },\n                    ncWeek: { type: String, optional: true },\n                    isTerm: { type: Boolean, optional: true },\n                    Term: { type: String, optional: true },\n                    astro: { type: String, optional: true }\n                };\n            }\n        };\n    }\n    constructor(options, metadata = LunarInfoType.get$UTSMetadata$(), isJSONParse = false) {\n        super();\n        this.__props__ = UTS.UTSType.initProps(options, metadata, isJSONParse);\n        this.lYear = this.__props__.lYear;\n        this.lMonth = this.__props__.lMonth;\n        this.lDay = this.__props__.lDay;\n        this.IMonthCn = this.__props__.IMonthCn;\n        this.IDayCn = this.__props__.IDayCn;\n        this.cYear = this.__props__.cYear;\n        this.cMonth = this.__props__.cMonth;\n        this.cDay = this.__props__.cDay;\n        this.gzYear = this.__props__.gzYear;\n        this.gzMonth = this.__props__.gzMonth;\n        this.gzDay = this.__props__.gzDay;\n        this.isToday = this.__props__.isToday;\n        this.isLeap = this.__props__.isLeap;\n        this.nWeek = this.__props__.nWeek;\n        this.ncWeek = this.__props__.ncWeek;\n        this.isTerm = this.__props__.isTerm;\n        this.Term = this.__props__.Term;\n        this.astro = this.__props__.astro;\n        delete this.__props__;\n    }\n}\nexport class Lunar {\n    constructor() {\n        this.lunarYearDaysMap = new Map();\n        this.lunarMonthDaysMap = new Map();\n    }\n    /**\n        * 传入农历数字月份返回汉语通俗表示法\n        * @param lunar month\n        * @return Cn string\n        * @eg:let cnMonth = calendar.toChinaMonth(12) ;//cnMonth='腊月'\n        */\n    toChinaMonth(m, leap = false) {\n        return leap ? (N_STR_3[4] + N_STR_3[m] + N_STR_3[0]) : (N_STR_3[m] + N_STR_3[0]);\n    }\n    /**\n        * 传入农历日期数字返回汉字表示法\n        * @param lunar day\n        * @return Cn string\n        * @eg:let cnDay = calendar.toChinaDay(21) ;//cnMonth='廿一'\n        */\n    toChinaDay(d) {\n        let s;\n        switch (d) {\n            case 10:\n                s = '\\u521d\\u5341';\n                break;\n            case 20:\n                s = '\\u4e8c\\u5341';\n                break;\n            case 30:\n                s = '\\u4e09\\u5341';\n                break;\n            default:\n                s = N_STR_2[Math.floor(d / 10)];\n                s += N_STR_1[d % 10];\n        }\n        return (s);\n    }\n    /**\n        * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\n        * @param lunar Year\n        * @return Number (0-12)\n        * @eg:let leapMonth = calendar.leapMonth(1987) ;//leapMonth=6\n        */\n    leapMonth(year) {\n        return lunarYears[year - 1900] & 0xF;\n    }\n    /**\n        * 返回农历y年闰月的天数 若该年没有闰月则返回0\n        * @param lunar Year\n        * @return Number (0、29、30)\n        * @eg:let leapMonthDay = calendar.leapDays(1987) ;//leapMonthDay=29\n        */\n    leapDays(year) {\n        if (this.leapMonth(year) > 0) {\n            return (lunarYears[year - 1900] & 0x10000) != 0 ? 30 : 29;\n        }\n        return 0;\n    }\n    // 某年份农历各月天数\n    lunarMonthDays(year) {\n        let monthDays = UTS.mapGet(this.lunarMonthDaysMap, year);\n        if (monthDays != null) {\n            return monthDays;\n        }\n        monthDays = [];\n        let lunarYear = lunarYears[year - 1900];\n        for (let i = 15; i >= 4; i--) {\n            let monthDay = (lunarYear >> i & 0x1) != 0 ? 30 : 29;\n            monthDays.push(monthDay);\n        }\n        // 添加闰月\n        let leapM = this.leapMonth(year);\n        if (leapM > 0)\n            monthDays.splice(leapM, 0, this.leapDays(year));\n        this.lunarMonthDaysMap.set(year, monthDays);\n        return monthDays;\n    }\n    // 某年农历天数\n    lunarYearDays(year) {\n        if (this.lunarYearDaysMap.has(year)) {\n            return UTS.mapGet(this.lunarYearDaysMap, year);\n        }\n        let num = 0;\n        this.lunarMonthDays(year).forEach(item => {\n            num += item;\n        });\n        this.lunarYearDaysMap.set(year, num);\n        return num;\n    }\n    /**\n        * 传入阳历年月日获得详细的公历、农历object信息 <=>JSON\n        * @param y  solar year\n        * @param m  solar month\n        * @param d  solar day\n        * @return JSON object\n        * @eg:uni.__log__('log','at pages/template/calendar/calendar.uts:195',calendar.solar2lunar(1987,11,01));\n        */\n    solar2lunar(y, m, d) {\n        let moonDay = this.solar_date(y, m, d);\n        let lYear = moonDay.lunarY;\n        let lMonth = moonDay.lunarM;\n        let lDay = moonDay.lunarD;\n        let isLeap = moonDay.isLeap;\n        // 计算农历日期\n        const IMonthCn = this.toChinaMonth(lMonth, isLeap);\n        let IDayCn = lDay == 1 ? IMonthCn : this.toChinaDay(lDay);\n        // 是否今天\n        let isTodayObj = new Date();\n        let isToday = false;\n        if (isTodayObj.getFullYear() == y && isTodayObj.getMonth() + 1 == m && isTodayObj.getDate() == d) {\n            isToday = true;\n        }\n        let info = new LunarInfoType({\n            'lYear': lYear,\n            'lMonth': lMonth,\n            'lDay': lDay,\n            'IMonthCn': IMonthCn,\n            'IDayCn': IDayCn,\n            'cYear': y,\n            'cMonth': m,\n            'cDay': d,\n            'isToday': isToday,\n            'isLeap': isLeap,\n        });\n        return info;\n    }\n    solar_date(y, m, d) {\n        let date = new Date(y, m - 1, d);\n        // 参照日期 1901-02-19 正月初一\n        let offset = (Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()) - Date.UTC(1901, 1, 19)) / 86400000;\n        let temp = 0;\n        let i;\n        for (i = 1901; i < 2101 && offset > 0; i++) {\n            temp = this.lunarYearDays(i);\n            offset -= temp;\n        }\n        if (offset < 0) {\n            offset += temp;\n            i--;\n        }\n        // 农历年、月、日\n        let isLeap = false;\n        let j = 0;\n        let monthDays = this.lunarMonthDays(i);\n        let leapM = this.leapMonth(i);\n        if (offset > 0) {\n            for (j = 0; j < monthDays.length && offset > 0; j++) {\n                temp = monthDays[j];\n                offset -= temp;\n            }\n            if (offset == 0) {\n                j++;\n            }\n            if (offset < 0) {\n                offset += temp;\n            }\n        }\n        else {\n            // 补偿公历1901年2月的农历信息\n            if (offset == -23) {\n                let info_1 = new InfoType({\n                    lunarY: i,\n                    lunarM: 12,\n                    lunarD: 8,\n                    isLeap: false\n                });\n                info_1 = info_1;\n            }\n        }\n        // 矫正闰年月\n        if (leapM > 0) {\n            if (j == leapM + 1) {\n                isLeap = true;\n            }\n            if (j >= leapM + 1) {\n                j--;\n            }\n        }\n        const info = new InfoType({\n            lunarY: i,\n            lunarM: j,\n            lunarD: ++offset,\n            isLeap: isLeap\n        });\n        return info;\n    }\n}\n//# sourceMappingURL=/Users/gaoruicheng/Documents/DcloudProject/uniapp-bugs/uniapp-bugs-main/singlePage/uniapp-hello-x/pages/template/calendar/calendar.uts.js.map","references":[],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"calendar.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"calendar.uts\"],\"names\":[],\"mappings\":\"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\"}"}
