{"code":"import { defineComponent } from \"vue\";\nclass SwiperTabsItem extends UTS.UTSType {\n    static get$UTSMetadata$() {\n        return {\n            kind: 2,\n            get fields() {\n                return {\n                    x: { type: Number, optional: false },\n                    w: { type: Number, optional: false }\n                };\n            }\n        };\n    }\n    constructor(options, metadata = SwiperTabsItem.get$UTSMetadata$(), isJSONParse = false) {\n        super();\n        this.__props__ = UTS.UTSType.initProps(options, metadata, isJSONParse);\n        this.x = this.__props__.x;\n        this.w = this.__props__.w;\n        delete this.__props__;\n    }\n}\nclass SwiperViewItem extends UTS.UTSType {\n    static get$UTSMetadata$() {\n        return {\n            kind: 2,\n            get fields() {\n                return {\n                    title: { type: String, optional: false }\n                };\n            }\n        };\n    }\n    constructor(options, metadata = SwiperViewItem.get$UTSMetadata$(), isJSONParse = false) {\n        super();\n        this.__props__ = UTS.UTSType.initProps(options, metadata, isJSONParse);\n        this.title = this.__props__.title;\n        delete this.__props__;\n    }\n}\n/**\n * 根据权重在两个值之间执行线性插值.\n * @constructor\n * @param {number} value1 - 第一个值，该值应为下限.\n * @param {number} value2 - 第二个值，该值应为上限.\n * @param {number} amount - 应介于 0 和 1 之间，指示内插的权重.\n * @returns {number} 内插值\n */\nfunction lerpNumber(value1, value2, amount) {\n    return (value1 + (value2 - value1) * amount);\n}\nexport default defineComponent({\n    data() {\n        return {\n            swiperList: [],\n            swiperIndex: 0,\n            tabScrollView: null,\n            indicatorNode: null,\n            animationFinishIndex: 0,\n            swiperWidth: 0,\n            swiperTabsRect: []\n        };\n    },\n    onLoad() {\n        // 初始化 8 个页签，宽度依次递增，用于演示在滑动 swiper 过程中指示线宽度的线性变化\n        for (let i = 0; i < 8; i++) {\n            const space = \" \".repeat(i);\n            this.swiperList.push(new SwiperViewItem({\n                title: \"Tab \" + space + i\n            }));\n        }\n    },\n    onReady() {\n        this.tabScrollView = this.$refs['tabScroll'];\n        this.indicatorNode = this.$refs['indicator'];\n        this.swiperWidth = this.$refs[\"swiper\"].getBoundingClientRect().width;\n        this.cacheTabItemsSize();\n        this.updateTabIndicator(this.swiperIndex, this.swiperIndex, 1);\n    },\n    methods: {\n        /**\n         * 每个页签的点击事件，点击后设置当前 swiper.\n         * @constructor\n         * @param {number} index - 当前索引，该值应介于 0 和 最大数量之间.\n         */\n        onTabClick(index) {\n            this.setSwiperIndex(index, false);\n        },\n        onSwiperTransition(e) {\n            // 微信 skyline 每项完成触发 Animationfinish，偏移值重置\n            // 微信 webview 全部完成触发 Animationfinish，偏移值累加\n            // 在滑动到下一个项的过程中，再次反向滑动，偏移值递减\n            // uni-app-x 和 微信 webview 行为一致\n            const offset_x = e.detail.dx;\n            // 计算当前索引并重置差异\n            const current_offset_x = offset_x % this.swiperWidth;\n            const current_offset_i = offset_x / this.swiperWidth;\n            const current_index = this.animationFinishIndex + parseInt(current_offset_i + '');\n            // 计算目标索引及边界检查\n            let move_to_index = current_index;\n            if (current_offset_x > 0 && move_to_index < this.swiperList.length - 1) {\n                move_to_index += 1;\n            }\n            else if (current_offset_x < 0 && move_to_index > 0) {\n                move_to_index -= 1;\n            }\n            // 计算偏移百分比\n            const percentage = Math.abs(current_offset_x) / this.swiperWidth;\n            // 通知更新指示线\n            if (current_index != move_to_index) {\n                this.updateTabIndicator(current_index, move_to_index, percentage);\n            }\n        },\n        /**\n         * Swiper滑动动画结束事件.\n         */\n        onSwiperAnimationfinish(e) {\n            this.setSwiperIndex(e.detail.current, true);\n            // 记录上次的索引位置\n            this.animationFinishIndex = e.detail.current;\n        },\n        /**\n         * 缓存所有页签的左边距和宽度，用于计算指示线在移动过程中的线性变化.\n         */\n        cacheTabItemsSize() {\n            this.swiperTabsRect.length = 0;\n            const tabs = this.$refs[\"swipertab\"];\n            tabs.forEach((node) => {\n                this.swiperTabsRect.push(new SwiperTabsItem({\n                    x: node.offsetLeft,\n                    w: node.offsetWidth\n                }));\n            });\n        },\n        /**\n         * 设置当前 swiper 选中的索引值.\n         * @constructor\n         * @param {number} index - 当前索引，该值应介于 0 和 最大数量之间.\n         * @param {boolean} updateIndicator - 是否更新指示线.\n         */\n        setSwiperIndex(index, updateIndicator) {\n            if (this.swiperIndex === index) {\n                return null;\n            }\n            this.swiperIndex = index;\n            if (updateIndicator) {\n                this.updateTabIndicator(index, index, 1);\n            }\n        },\n        /**\n         * 更新页签指示线的位置和宽度.\n         * @constructor\n         * @param {number} current_index - 当前索引，该值应介于 0 和 最大数量之间.\n         * @param {number} move_to_index - 目标索引，该值应介于 0 和 最大数量之间.\n         * @param {number} percentage - 偏移百分比，应介于 0 和 1 之间，用于计算在移动过程中的线性值.\n         */\n        updateTabIndicator(current_index, move_to_index, percentage) {\n            var _a, _b;\n            const current_size = this.swiperTabsRect[current_index];\n            const move_to_size = this.swiperTabsRect[move_to_index];\n            // 计算指示线 位置 和 宽度 在移动过程中的线性值\n            const indicator_line_x = lerpNumber(current_size.x, move_to_size.x, percentage);\n            const indicator_line_w = lerpNumber(current_size.w, move_to_size.w, percentage);\n            // 通过 transform 更新指示线，避免重排版\n            const x = indicator_line_x + indicator_line_w / 2;\n            (_b = (_a = this.indicatorNode) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.setProperty('transform', `translateX(${x}px) scaleX(${indicator_line_w})`);\n            // 滚动到水平中心位置\n            const scroll_x = x - this.swiperWidth / 2;\n            this.tabScrollView.scrollLeft = scroll_x;\n        }\n    }\n});\n//# sourceMappingURL=/Users/gaoruicheng/Documents/DcloudProject/uniapp-bugs/uniapp-bugs-main/singlePage/uniapp-hello-x/pages/template/swiper-list/swiper-list.uvue?vue&type=script&lang.uts.js.map","references":[],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"swiper-list.uvue?vue&type=script&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"swiper-list.uvue?vue&type=script&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
