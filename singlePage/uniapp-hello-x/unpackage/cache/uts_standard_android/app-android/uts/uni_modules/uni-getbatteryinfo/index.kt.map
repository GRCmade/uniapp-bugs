{"version":3,"sources":["uni_modules/uni-getbatteryinfo/utssdk/app-android/index.uts","uni_modules/uni-getbatteryinfo/utssdk/interface.uts"],"sourcesContent":["import Context from \"android.content.Context\";\nimport BatteryManager from \"android.os.BatteryManager\";\n\nimport { GetBatteryInfo, GetBatteryInfoOptions, GetBatteryInfoSuccess, GetBatteryInfoResult,GetBatteryInfoSync } from '../interface.uts'\nimport IntentFilter from 'android.content.IntentFilter';\nimport Intent from 'android.content.Intent';\n\n\n/**\n * 异步获取电量\n */\nexport const getBatteryInfo : GetBatteryInfo = function (options : GetBatteryInfoOptions) {\n\n\n    const context = UTSAndroid.getAppContext();\n    if (context != null) {\n        const manager = context.getSystemService(\n            Context.BATTERY_SERVICE\n        ) as BatteryManager;\n        const level = manager.getIntProperty(\n            BatteryManager.BATTERY_PROPERTY_CAPACITY\n        );\n\n        let ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\n        let batteryStatus = context.registerReceiver(null, ifilter);\n        let status = batteryStatus?.getIntExtra(BatteryManager.EXTRA_STATUS, -1);\n        let isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING || status == BatteryManager.BATTERY_STATUS_FULL;\n\n        const res : GetBatteryInfoSuccess = {\n            errMsg: 'getBatteryInfo:ok',\n            level,\n            isCharging: isCharging\n        }\n        options.success?.(res)\n        options.complete?.(res)\n    } else {\n\t\tconst res = new UniError(\"uni-getBatteryInfo\", 1001, \"getBatteryInfo:fail getAppContext is null\")\n        options.fail?.(res)\n        options.complete?.(res)\n    }\n}\n\n/**\n * 同步获取电量示例\n */\nexport const getBatteryInfoSync : GetBatteryInfoSync = function (): GetBatteryInfoResult {\n\n    const context = UTSAndroid.getAppContext();\n    if (context != null) {\n\n\n        const manager = context.getSystemService(\n            Context.BATTERY_SERVICE\n        ) as BatteryManager;\n        const level = manager.getIntProperty(\n            BatteryManager.BATTERY_PROPERTY_CAPACITY\n        );\n        \n        let ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\n        let batteryStatus = context.registerReceiver(null, ifilter);\n        let status = batteryStatus?.getIntExtra(BatteryManager.EXTRA_STATUS, -1);\n        let isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING || status == BatteryManager.BATTERY_STATUS_FULL;\n        \n        const res : GetBatteryInfoResult = {\n            level: level,\n            isCharging: isCharging\n        };\n\n        return res;\n    }\n    else {\n        /**\n         * 无有效上下文\n         */\n        const res : GetBatteryInfoResult = {\n            level: -1,\n            isCharging: false\n        };\n        return res;\n    }\n\n\n}\n","export type GetBatteryInfoSuccess = {\n\terrMsg : string,\n\t/**\n\t* 设备电量，范围1 - 100\n\t*/\n\tlevel : number,\n\t/**\n\t* 是否正在充电中\n\t*/\n\tisCharging : boolean\n}\n\n// export type GetBatteryInfoFail = {\n// \t/**\n// \t* 错误码\n// \t*/\n// \terrCode : number,\n// \t/**\n// \t* 调用API的名称\n// \t*/\n// \terrSubject : string,\n// \t/**\n// \t* 错误的详细信息\n// \t*/\n// \terrMsg : string,\n// \t/**\n// \t* 错误来源\n// \t*/\n// \tcause : any | null\n// }\n\n\n\nexport type GetBatteryInfoOptions = {\n\t/**\n\t\t* 接口调用结束的回调函数（调用成功、失败都会执行）\n\t\t*/\n\tsuccess ?: (res : GetBatteryInfoSuccess) => void\n\t/**\n\t\t* 接口调用失败的回调函数\n\t\t*/\n\tfail ?: (res : UniError) => void\n\t/**\n\t\t* 接口调用成功的回调\n\t\t*/\n\tcomplete ?: (res : any) => void\n}\n\nexport type GetBatteryInfoResult = {\n\t/**\n\t* 设备电量，范围1 - 100\n\t*/\n\tlevel : number,\n\t/**\n\t* 是否正在充电中\n\t*/\n\tisCharging : boolean\n}\n\n/**\n* 获取电量信息\n* @param {GetBatteryInfoOptions} options\n*\n*\n* @tutorial https://uniapp.dcloud.net.cn/api/system/batteryInfo.html\n* @platforms APP-IOS = ^9.0,APP-ANDROID = ^22\n* @since 3.6.11\n*\n* @assert () => success({errCode: 0, errSubject: \"uni-getBatteryInfo\", errMsg: \"getBatteryInfo:ok\", level: 60, isCharging: false })\n* @assert () => fail({errCode: 1001, errSubject: \"uni-getBatteryInfo\", errMsg: \"getBatteryInfo:fail getAppContext is null\" })\n*/\nexport type GetBatteryInfo = (options : GetBatteryInfoOptions) => void\n\n\nexport type GetBatteryInfoSync = () => GetBatteryInfoResult\n\ninterface Uni {\n\n\t/**\n\t * 获取电池电量信息\n\t * @description 获取电池电量信息\n\t * @param {GetBatteryInfoOptions} options\n\t * @example\n\t * ```typescript\n\t * uni.getBatteryInfo({\n\t *\t\tsuccess(res) {\n\t *\t\t\tconsole.log(res);\n\t *\t\t}\n\t * })\n\t * ```\n\t * @remark\n\t * - 该接口需要同步调用\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.6.11\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.6.11\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        }\n\t *    }\n\t * }\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t *\n\t */\n\tgetBatteryInfo (options : GetBatteryInfoOptions) : void,\n\t/**\n\t * 同步获取电池电量信息\n\t * @description 获取电池电量信息\n\t * @example\n\t * ```typescript\n\t * uni.getBatteryInfo()\n\t * ```\n\t * @remark\n\t * - 该接口需要同步调用\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.6.11\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.6.11\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        }\n\t *    }\n\t * }\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t *\n\t */\n\tgetBatteryInfoSync():GetBatteryInfoResult\n\n}\n"],"names":[],"mappings":";;AAAA,OAAoB,uBAAyB,CAAC;AAK9C,OAAmB,sBAAwB,CAAC;AAD5C,OAAyB,4BAA8B,CAAC;AAHxD,OAA2B,yBAA2B,CAAC;;;;;;;;;;;;;;;;ACDnB,WAAxB;IACX;qBAAS,MAAM,CAAC;IAIhB;oBAAQ,MAAM,CAAC;IAIf;yBAAa,OAAO,SAAA;AACrB;;;;;AAuBoC,WAAxB;IAIX,oBAAY,KAAM,0BAA0B,IAAI,UAAA;IAIhD,iBAAS,KAAM,aAAa,IAAI,UAAA;IAIhC,qBAAa,KAAM,GAAG,KAAK,IAAI,UAAA;AAChC;;;;;AAEmC,WAAvB;IAIX;oBAAQ,MAAM,CAAC;IAIf;yBAAa,OAAO,SAAA;AACrB;;;;;UAcY,kBAAkB,SAAU,0BAA0B,IAAI;UAG1D,2BAA2B;AD/DhC,IAAM,iCAAkC,IAAU,8BAA+B,EAAE;IAGtF,IAAM,UAAU,WAAW,aAAa;IACxC,IAAI,WAAW,IAAI,EAAE;QACjB,IAAM,UAAU,QAAQ,gBAAgB,CACpC,QAAQ,eAAe,EACzB,EAAE,CAAC;QACL,IAAM,QAAQ,QAAQ,cAAc,CAChC,eAAe,yBAAyB;QAG5C,IAAI,UAAU,AAAI,aAAa,OAAO,sBAAsB;QAC5D,IAAI,gBAAgB,QAAQ,gBAAgB,CAAC,IAAI,EAAE;QACnD,IAAI,SAAS,eAAe,YAAY,eAAe,YAAY,EAAE,CAAC,CAAC;QACvE,IAAI,aAAa,UAAU,eAAe,uBAAuB,IAAI,UAAU,eAAe,mBAAmB;QAEjH,IAAM,4BACF,SAAQ,qBACR,QAAA,OACA,aAAY;QAEhB,QAAQ,OAAO,SAAG;QAClB,QAAQ,QAAQ,SAAG;IACvB,OAAO;QACT,IAAM,MAAM,AAAI,SAAS,sBAAsB,IAAI,EAAE;QAC/C,QAAQ,IAAI,SAAG;QACf,QAAQ,QAAQ,SAAG;IACvB;AACJ;;AAKO,IAAM,yCAA0C,4BAAkC;IAErF,IAAM,UAAU,WAAW,aAAa;IACxC,IAAI,WAAW,IAAI,EAAE;QAGjB,IAAM,UAAU,QAAQ,gBAAgB,CACpC,QAAQ,eAAe,EACzB,EAAE,CAAC;QACL,IAAM,QAAQ,QAAQ,cAAc,CAChC,eAAe,yBAAyB;QAG5C,IAAI,UAAU,AAAI,aAAa,OAAO,sBAAsB;QAC5D,IAAI,gBAAgB,QAAQ,gBAAgB,CAAC,IAAI,EAAE;QACnD,IAAI,SAAS,eAAe,YAAY,eAAe,YAAY,EAAE,CAAC,CAAC;QACvE,IAAI,aAAa,UAAU,eAAe,uBAAuB,IAAI,UAAU,eAAe,mBAAmB;QAEjH,IAAM,2BACF,QAAO,OACP,aAAY;QAGhB,OAAO;IACX,OACK;QAID,IAAM,2BACF,QAAO,CAAC,CAAC,EACT,aAAY,KAAK;QAErB,OAAO;IACX;AAGJ"}