
  const __sfc__ = defineComponent({
    data() {
      return {
        title: '一键登录',
        univerifyManager: null as UniverifyManager | null
      }
    },
    onLoad() {
      this.univerifyManager = uni.getUniverifyManager();
      // 预登录
      this.univerifyManager?.preLogin({
        success: () => {
          console.log("pre login success", " at pages/API/get-univerify-manager/get-univerify-manager.uvue:28");
        },
        fail: (err : PreLoginFail) => {
          console.error("pre login fail => " + JSON.stringify(err), " at pages/API/get-univerify-manager/get-univerify-manager.uvue:31");
          uni.showToast({
            title: '预登录失败'
          });
        }
      } as PreLoginOptions);
    },
    methods: {
      verify(fullScreen : boolean) {
        // 校验预登录是否有效
        const isPreLoginValid = this.univerifyManager?.isPreLoginValid() ?? false;
        if (isPreLoginValid) {
          // 预登录有效，执行登录
          this.login(fullScreen);
        } else {
          // 预登录无效，执行预登录
          this.univerifyManager?.preLogin({
            success: () => {
              console.log("pre login success", " at pages/API/get-univerify-manager/get-univerify-manager.uvue:49");
              this.login(fullScreen);
            },
            fail: (err : PreLoginFail) => {
              console.error("pre login fail => " + JSON.stringify(err), " at pages/API/get-univerify-manager/get-univerify-manager.uvue:53");
              uni.showToast({
                title: '预登录失败'
              });
            }
          } as PreLoginOptions);
        }
      },
      login(fullScreen : boolean) {
        this.univerifyManager?.login({
          // 登录页样式
          univerifyStyle: {
            fullScreen: fullScreen,
            backgroundColor: "#FFFFFF",
            loginBtnText: "一键登录",
            logoPath: "/static/logo.png"
          } as UniverifyStyle,
          success: (res : LoginSuccess) => {
            console.log("login success => " + JSON.stringify(res), " at pages/API/get-univerify-manager/get-univerify-manager.uvue:71");
            // 云函数取号
            uniCloud.callFunction({
              name: 'univerify',
              data: {
                access_token: res.accessToken, // 客户端一键登录接口返回的access_token
                openid: res.openId // 客户端一键登录接口返回的openid
              }
            }).then(res => {
              // 关闭登录页
              this.univerifyManager?.close();
              setTimeout(() => {
                uni.showModal({
                  title: '取号成功',
                  content: res.result.getJSON("res")?.getString("phoneNumber"),
                  showCancel: false
                });
              }, 100);
            }).catch(err => {
              console.error(JSON.stringify(err), " at pages/API/get-univerify-manager/get-univerify-manager.uvue:90");
              // 关闭登录页
              this.univerifyManager?.close();
              setTimeout(() => {
                uni.showModal({
                  title: '取号失败',
                  content: (err as Error).message,
                  showCancel: false
                });
              }, 100);
            });
          },
          fail: (err : LoginFail) => {
            console.error("login fail => " + err, " at pages/API/get-univerify-manager/get-univerify-manager.uvue:103");
            uni.showToast({
              title: '登录失败'
            });
          }
        } as LoginOptions);
      }
    }
  })

export default __sfc__
function GenPagesAPIGetUniverifyManagerGetUniverifyManagerRender(this: InstanceType<typeof __sfc__>): any | null {
const _ctx = this
const _cache = this.$.renderCache
const _component_page_head = resolveEasyComponent("page-head",_easycom_page_head)

  return createElementVNode("view", null, [
    createVNode(_component_page_head, utsMapOf({ title: _ctx.title }), null, 8 /* PROPS */, ["title"]),
    createElementVNode("view", utsMapOf({ class: "uni-padding-wrap uni-common-mt" }), [
      createElementVNode("view", utsMapOf({ class: "uni-btn-v uni-common-mt" }), [
        createElementVNode("button", utsMapOf({
          type: "primary",
          onClick: () => {_ctx.verify(false)}
        }), "一键登录（半屏）", 8 /* PROPS */, ["onClick"])
      ]),
      createElementVNode("view", utsMapOf({ class: "uni-btn-v uni-common-mt" }), [
        createElementVNode("button", utsMapOf({
          type: "primary",
          onClick: () => {_ctx.verify(true)}
        }), "一键登录（全屏）", 8 /* PROPS */, ["onClick"])
      ])
    ])
  ])
}
const GenPagesAPIGetUniverifyManagerGetUniverifyManagerStyles = []

import _easycom_page_head from '@/components/page-head/page-head.vue'

//# sourceMappingURL=get-univerify-manager.uvue.map