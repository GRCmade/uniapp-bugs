
  type ItemType = { __$originalPosition?: UTSSourceMapPosition<"ItemType", "pages/API/get-location/get-location.uvue", 40, 8>;
    value : 'wgs84' | 'gcj02',
    name : string,
  }
  const __sfc__ = defineComponent({
    data() {
      return {
        title: 'get-location',
        altitudeSelect: false,
        isHighAccuracySelect: false,
        geocodeSelect: false,
        exeRet: '',
        items: [
        {
          value: 'wgs84',
          name: 'wgs84'
        },
        {
          value: 'gcj02',
          name: 'gcj02'
        }
        ] as ItemType[],
        current: 0,
      }
    },
    methods: {
      altitudeChange: function (e : UniSwitchChangeEvent) {
        this.altitudeSelect = e.detail.value
      },
      geocodeChange: function (e : UniSwitchChangeEvent) {
        this.geocodeSelect = e.detail.value
      },
      highAccuracySelectChange: function (e : UniSwitchChangeEvent) {
        this.isHighAccuracySelect = e.detail.value
      },
      radioChange(e : UniRadioGroupChangeEvent) {
        for (let i = 0; i < this.items.length; i++) {
          if (this.items[i].value === e.detail.value) {
            this.current = i;
            break;
          }
        }
      },
      getLocationTap: function () {
        uni.showLoading({
          title: '定位中'
        })
        uni.getLocation(({
          type: this.items[this.current].value,
          altitude: this.altitudeSelect,
          isHighAccuracy: this.isHighAccuracySelect,
          geocode: this.geocodeSelect,
          success: (res : any) => {
            uni.hideLoading()
            console.log(res, " at pages/API/get-location/get-location.uvue:94");
            this.exeRet = JSON.stringify(res)
          },
          fail: (res : any) => {
            uni.hideLoading()
            console.log(res, " at pages/API/get-location/get-location.uvue:99");
            this.exeRet = JSON.stringify(res)
          },
          complete: (res : any) => {
            uni.hideLoading()
            console.log(res, " at pages/API/get-location/get-location.uvue:104");
            this.exeRet = JSON.stringify(res)
          }
        }));


      }

    }
  })

export default __sfc__
function GenPagesAPIGetLocationGetLocationRender(this: InstanceType<typeof __sfc__>): any | null {
const _ctx = this
const _cache = this.$.renderCache
const _component_page_head = resolveEasyComponent("page-head",_easycom_page_head)
const _component_u_link = resolveEasyComponent("u-link",_easycom_u_link)
const _component_radio = resolveComponent("radio")
const _component_radio_group = resolveComponent("radio-group")
const _component_switch = resolveComponent("switch")

  return createElementVNode(Fragment, null, [
    createVNode(_component_page_head, utsMapOf({ title: _ctx.title }), null, 8 /* PROPS */, ["title"]),
    createElementVNode("view", utsMapOf({
      style: normalizeStyle(utsMapOf({"padding":"4px"}))
    }), [
      createElementVNode("text", utsMapOf({ class: "hello-text" }), " 定位功能默认调用操作系统定位API实现。\n 部分手机因gms兼容不好可能导致无法定位。\n gcj国标、逆地理信息等功能需三方sdk定位。如果需要类似能力可以下载腾讯定位插件，打包自定义基座。参考示例："),
      createVNode(_component_u_link, utsMapOf({
        href: 'https://ext.dcloud.net.cn/plugin?id=14569',
        text: 'https://ext.dcloud.net.cn/plugin?id=14569',
        inWhiteList: true
      }), null, 8 /* PROPS */, ["href", "text"])
    ], 4 /* STYLE */),
    createElementVNode("view", utsMapOf({ class: "uni-padding-wrap uni-common-mt" }), [
      createElementVNode("view", utsMapOf({ class: "uni-list" }), [
        createVNode(_component_radio_group, utsMapOf({ onChange: _ctx.radioChange }), utsMapOf({
          default: withSlotCtx((): any[] => [
            createElementVNode(Fragment, null, RenderHelpers.renderList(_ctx.items, (item, index, __index, _cached): any => {
              return createVNode(_component_radio, utsMapOf({
                class: normalizeClass(["uni-list-cell uni-list-cell-pd", index < _ctx.items.length - 1 ? 'uni-list-cell-line': '']),
                key: item.value,
                value: item.value,
                checked: index === _ctx.current
              }), utsMapOf({
                default: withSlotCtx((): any[] => [toDisplayString(item.name)]),
                _: 2 /* DYNAMIC */
              }), 1032 /* PROPS, DYNAMIC_SLOTS */, ["class", "value", "checked"])
            }), 128 /* KEYED_FRAGMENT */)
          ]),
          _: 1 /* STABLE */
        }), 8 /* PROPS */, ["onChange"])
      ]),
      createElementVNode("view", utsMapOf({ class: "uni-list-cell uni-list-cell-pd" }), [
        createElementVNode("view", utsMapOf({ class: "uni-list-cell-db" }), "高度信息"),
        createVNode(_component_switch, utsMapOf({
          checked: _ctx.altitudeSelect,
          onChange: _ctx.altitudeChange
        }), null, 8 /* PROPS */, ["checked", "onChange"])
      ]),
      createElementVNode("view", utsMapOf({ class: "uni-list-cell uni-list-cell-pd" }), [
        createElementVNode("view", utsMapOf({ class: "uni-list-cell-db" }), "开启高精度定位"),
        createVNode(_component_switch, utsMapOf({
          checked: _ctx.isHighAccuracySelect,
          onChange: _ctx.highAccuracySelectChange
        }), null, 8 /* PROPS */, ["checked", "onChange"])
      ]),
      createElementVNode("view", utsMapOf({ class: "uni-list-cell uni-list-cell-pd" }), [
        createElementVNode("view", utsMapOf({ class: "uni-list-cell-db" }), "是否解析地址信息"),
        createVNode(_component_switch, utsMapOf({
          checked: _ctx.geocodeSelect,
          onChange: _ctx.geocodeChange
        }), null, 8 /* PROPS */, ["checked", "onChange"])
      ]),
      createElementVNode("text", null, toDisplayString(_ctx.exeRet), 1 /* TEXT */),
      createElementVNode("view", utsMapOf({ class: "uni-btn-v" }), [
        createElementVNode("button", utsMapOf({
          class: "uni-btn",
          type: "default",
          onClick: _ctx.getLocationTap
        }), "获取定位", 8 /* PROPS */, ["onClick"])
      ])
    ])
  ], 64 /* STABLE_FRAGMENT */)
}
const GenPagesAPIGetLocationGetLocationStyles = []

import _easycom_page_head from '@/components/page-head/page-head.vue'
import _easycom_u_link from '@/components/u-link/u-link.vue'

//# sourceMappingURL=get-location.uvue.map