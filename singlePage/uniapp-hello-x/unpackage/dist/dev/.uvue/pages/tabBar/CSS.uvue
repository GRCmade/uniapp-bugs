
  type Page = { __$originalPosition?: UTSSourceMapPosition<"Page", "pages/tabBar/CSS.uvue", 33, 8>;
    name : string
    enable ?: boolean
    url ?: string
  }
  type ListItem = { __$originalPosition?: UTSSourceMapPosition<"ListItem", "pages/tabBar/CSS.uvue", 38, 8>;
    id : string
    name : string
    pages : Page[]
    url ?: string
    enable ?: boolean
  }
  const __sfc__ = defineComponent({
    data() {
      return {
        list: [
          {
            id: 'background',
            name: 'background',
            pages: [
              {
                name: 'background-color',
                url: '/pages/CSS/background/background-color',
              },
              {
                name: 'background-image',
                url: '/pages/CSS/background/background-image',
              },
            ] as Page[],
          },
          {
            id: 'border',
            name: 'border',
            pages: [
              {
                name: 'border',
                url: '/pages/CSS/border/border',
              },
              {
                name: 'border-width',
                url: '/pages/CSS/border/border-width',
              },
              {
                name: 'border-style',
                url: '/pages/CSS/border/border-style',
              },
              {
                name: 'border-color',
                url: '/pages/CSS/border/border-color',
              },
              {
                name: 'border-radius',
                url: '/pages/CSS/border/border-radius',
              },
              {
                name: 'border-top',
                url: '/pages/CSS/border/border-top',
              },
              {
                name: 'border-bottom',
                url: '/pages/CSS/border/border-bottom',
              },
              {
                name: 'border-left',
                url: '/pages/CSS/border/border-left',
              },
              {
                name: 'border-right',
                url: '/pages/CSS/border/border-right',
              },
              {
                name: 'border属性复合示例',
                url: '/pages/CSS/border/complex-border/complex-border',
              },
              {
                name: 'border动态修改样式',
                url: '/pages/CSS/border/dynamic-border'
              },
            ] as Page[],
          },
          {
            id: 'box-shadow',
            name: 'box-shadow',
            pages: [
              {
                name: 'box-shadow',
                url: '/pages/CSS/box-shadow/box-shadow',
              },
            ] as Page[],
          },
          {
            id: 'display',
            name: 'display',
            pages: [
              {
                name: 'flex',
                url: '/pages/CSS/display/flex',
              },
              {
                name: 'none',
                url: '/pages/CSS/display/none',
              }
            ] as Page[],
          },
          {
            id: 'flex',
            name: 'flex',
            pages: [
              {
                name: 'align-content',
                url: '/pages/CSS/flex/align-content',
              },
              {
                name: 'align-items',
                url: '/pages/CSS/flex/align-items',
              },
              {
                name: 'flex-basis',
                url: '/pages/CSS/flex/flex-basis',
              },
              {
                name: 'flex-direction',
                url: '/pages/CSS/flex/flex-direction',
              },
              {
                name: 'flex-flow',
                url: '/pages/CSS/flex/flex-flow',
              },
              {
                name: 'flex-grow',
                url: '/pages/CSS/flex/flex-grow',
              },
              {
                name: 'flex-shrink',
                url: '/pages/CSS/flex/flex-shrink',
              },
              {
                name: 'flex',
                url: '/pages/CSS/flex/flex',
              },
              {
                name: 'justify-content',
                url: '/pages/CSS/flex/justify-content',
              },
            ] as Page[],
          },
          {
            id: 'layout',
            name: 'layout',
            pages: [
              {
                name: 'height',
                url: '/pages/CSS/layout/height',
              },
              {
                name: 'max-height',
                url: '/pages/CSS/layout/max-height',
              },
              {
                name: 'max-width',
                url: '/pages/CSS/layout/max-width',
              },
              {
                name: 'min-height',
                url: '/pages/CSS/layout/min-height',
              },
              {
                name: 'min-width',
                url: '/pages/CSS/layout/min-width',
              },
              {
                name: 'position',
                url: '/pages/CSS/layout/position',
              },
              {
                name: 'width',
                url: '/pages/CSS/layout/width',
              },
              {
                name: 'z-index',
                url: '/pages/CSS/layout/z-index',
              },
              {
                name: 'visibility',
                url: '/pages/CSS/layout/visibility',
              },
            ] as Page[],
          },
          {
            id: 'margin',
            name: 'margin',
            pages: [
              {
                name: 'margin-bottom',
                url: '/pages/CSS/margin/margin-bottom',
              },
              {
                name: 'margin-left',
                url: '/pages/CSS/margin/margin-left',
              },
              {
                name: 'margin-right',
                url: '/pages/CSS/margin/margin-right',
              },
              {
                name: 'margin-top',
                url: '/pages/CSS/margin/margin-top',
              },
              {
                name: 'margin',
                url: '/pages/CSS/margin/margin',
              },
            ] as Page[],
          },
          {
            id: 'padding',
            name: 'padding',
            pages: [
              {
                name: 'padding-bottom',
                url: '/pages/CSS/padding/padding-bottom',
              },
              {
                name: 'padding-left',
                url: '/pages/CSS/padding/padding-left',
              },
              {
                name: 'padding-right',
                url: '/pages/CSS/padding/padding-right',
              },
              {
                name: 'padding-top',
                url: '/pages/CSS/padding/padding-top',
              },
              {
                name: 'padding',
                url: '/pages/CSS/padding/padding',
              },
            ] as Page[],
          },
          {
            id: 'overflow',
            name: 'overflow',
            pages: [
              {
                name: 'overflow',
                url: '/pages/CSS/overflow/overflow',
              },
              {
                name: 'overflow-visible-event',
                url: '/pages/CSS/overflow/overflow-visible-event'
              }
            ] as Page[],
          },
          {
            id: 'text',
            name: 'text',
            pages: [
              {
                name: 'color',
                url: '/pages/CSS/text/color',
              },
              {
                name: 'font-family',
                url: '/pages/CSS/text/font-family',
              },
              {
                name: 'font-size',
                url: '/pages/CSS/text/font-size',
              },
              {
                name: 'font-style',
                url: '/pages/CSS/text/font-style',
              },
              {
                name: 'font-weight',
                url: '/pages/CSS/text/font-weight',
              },
              {
                name: 'letter-spacing',
                url: '/pages/CSS/text/letter-spacing',
              },
              {
                name: 'line-height',
                url: '/pages/CSS/text/line-height',
              },
              {
                name: 'text-align',
                url: '/pages/CSS/text/text-align',
              },
              {
                name: 'text-overflow',
                url: '/pages/CSS/text/text-overflow',
              },
              {
                name: 'text-decoration-line',
                url: '/pages/CSS/text/text-decoration-line',
              },
            ] as Page[],
          },
          {
            id: 'transform',
            name: 'transform',
            pages: [
              {
                name: 'translate',
                url: '/pages/CSS/transform/translate',
              },
              {
                name: 'scale',
                url: '/pages/CSS/transform/scale',
              },
              {
                name: 'rotate',
                url: '/pages/CSS/transform/rotate',
              },
            ] as Page[],
          },
          {
            id: 'transition',
            name: 'transition',
            pages: [
              {
                name: 'transition',
                url: '/pages/CSS/transition/transition',
              },
            ] as Page[],
          },
          {
            id: 'pointer-events',
            name: 'pointer-events',
            pages: [
              {
                name: 'pointer-events',
                url: '/pages/CSS/pointer-events/pointer-events',
              },
            ] as Page[],
          },
          {
            id: 'variable',
            name: 'variable',
            pages: [
              {
                name: 'variable',
                url: '/pages/CSS/variable/variable',
              },
            ] as Page[],
          }
        ] as ListItem[],
        arrowUpIcon: '/static/icons/arrow-up.png',
        arrowDownIcon: '/static/icons/arrow-down.png',
        arrowRightIcon: '/static/icons/arrow-right.png',
      }
    },
    methods: {
      goDetailPage(e : Page) {
        if (e.enable == false) {
          uni.showToast({
            icon: 'none',
            title: '暂不支持',
          })
          return
        }
        const url = e.url != null ? e.url! : `/pages/CSS/${e.name}/${e.name}`
        uni.navigateTo({
          url,
        })
      },
    },
  })

export default __sfc__
function GenPagesTabBarCSSRender(this: InstanceType<typeof __sfc__>): any | null {
const _ctx = this
const _cache = this.$.renderCache
const _component_u_link = resolveEasyComponent("u-link",_easycom_u_link)
const _component_uni_collapse_item = resolveEasyComponent("uni-collapse-item",_easycom_uni_collapse_item)
const _component_uni_collapse = resolveEasyComponent("uni-collapse",_easycom_uni_collapse)

  return createElementVNode("scroll-view", utsMapOf({
    style: normalizeStyle(utsMapOf({"flex":"1","background-color":"#f8f8f8"})),
    "enable-back-to-top": "true"
  }), [
    createElementVNode("view", utsMapOf({ class: "uni-container" }), [
      createElementVNode("view", utsMapOf({ class: "uni-header-logo" }), [
        createElementVNode("image", utsMapOf({
          class: "uni-header-image",
          src: "/static/cssIndex.png"
        }))
      ]),
      createElementVNode("view", utsMapOf({ class: "uni-text-box" }), [
        createElementVNode("text", utsMapOf({ class: "hello-text" }), "uni-app x目前已支持的CSS属性，展示样式仅供参考，文档详见："),
        createVNode(_component_u_link, utsMapOf({
          href: 'https://uniapp.dcloud.io/uni-app-x/css/',
          text: 'https://uniapp.dcloud.io/uni-app-x/css/',
          inWhiteList: true
        }), null, 8 /* PROPS */, ["href", "text"])
      ]),
      createVNode(_component_uni_collapse, null, utsMapOf({
        default: withSlotCtx((): any[] => [
          createElementVNode(Fragment, null, RenderHelpers.renderList(_ctx.list, (item, __key, __index, _cached): any => {
            return createVNode(_component_uni_collapse_item, utsMapOf({
              key: item.id,
              title: item.name,
              class: "item"
            }), utsMapOf({
              default: withSlotCtx((): any[] => [
                createElementVNode(Fragment, null, RenderHelpers.renderList(item.pages, (page, key, __index, _cached): any => {
                  return createElementVNode("view", utsMapOf({
                    class: "uni-navigate-item",
                    "hover-class": page.enable == false?'':'is--active',
                    key: key,
                    onClick: () => {_ctx.goDetailPage(page)}
                  }), [
                    createElementVNode("text", utsMapOf({
                      class: normalizeClass(["uni-navigate-text", page.enable == false ? 'text-disabled' : ''])
                    }), toDisplayString(page.name), 3 /* TEXT, CLASS */),
                    createElementVNode("image", utsMapOf({
                      src: _ctx.arrowRightIcon,
                      class: "uni-icon-size"
                    }), null, 8 /* PROPS */, ["src"])
                  ], 8 /* PROPS */, ["hover-class", "onClick"])
                }), 128 /* KEYED_FRAGMENT */)
              ]),
              _: 2 /* DYNAMIC */
            }), 1032 /* PROPS, DYNAMIC_SLOTS */, ["title"])
          }), 128 /* KEYED_FRAGMENT */)
        ]),
        _: 1 /* STABLE */
      }))
    ])
  ], 4 /* STYLE */)
}
const GenPagesTabBarCSSStyles = [utsMapOf([["item", padStyleMapOf(utsMapOf([["marginBottom", 12]]))]])]

import _easycom_u_link from '@/components/u-link/u-link.vue'
import _easycom_uni_collapse_item from '@/components/uni-collapse-item/uni-collapse-item.vue'
import _easycom_uni_collapse from '@/components/uni-collapse/uni-collapse.vue'

//# sourceMappingURL=CSS.uvue.map